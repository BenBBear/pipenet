

================================================================
== Vivado HLS Report for 'net'
================================================================
* Date:           Mon Sep  5 13:30:28 2016

* Version:        2016.1 (Build 1538259 on Fri Apr 08 16:12:49 MDT 2016)
* Project:        PipeNet
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     10.66|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+-------+-------+-------+---------+
    |    Latency    |    Interval   | Pipeline|
    |  min  |  max  |  min  |  max  |   Type  |
    +-------+-------+-------+-------+---------+
    |  29162|  29162|  29163|  29163|   none  |
    +-------+-------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-------+-------+----------+-----------+-----------+------+----------+
        |          |    Latency    | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|  min  |  max  |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-------+-------+----------+-----------+-----------+------+----------+
        |- Loop 1  |  28260|  28260|        73|         36|          1|   784|    yes   |
        +----------+-------+-------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 36, depth = 73


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 76
* Pipeline: 1
  Pipeline-0: II = 36, D = 73, States = { 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	76  / (exitcond_flatten)
	4  / (!exitcond_flatten)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	3  / true
76 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: output_conv_1_0_1 [1/1] 0.00ns
:0  %output_conv_1_0_1 = alloca i8

ST_1: output_conv_1_1_1 [1/1] 0.00ns
:1  %output_conv_1_1_1 = alloca i8

ST_1: row_c2_1 [1/1] 0.00ns
:2  %row_c2_1 = alloca i32

ST_1: v [1/1] 0.00ns
:3  %v = alloca i8

ST_1: col_c2_1 [1/1] 0.00ns
:4  %col_c2_1 = alloca i32

ST_1: img_input_data_stream_0_V [1/1] 0.00ns
:20  %img_input_data_stream_0_V = alloca i8, align 1

ST_1: img_input_data_stream_1_V [1/1] 0.00ns
:23  %img_input_data_stream_1_V = alloca i8, align 1

ST_1: img_input_data_stream_2_V [1/1] 0.00ns
:26  %img_input_data_stream_2_V = alloca i8, align 1

ST_1: stg_85 [2/2] 1.57ns
:32  call fastcc void @"net_AXIvideo2Mat<32, 28, 28, 4096>"(i32* %INPUT_STREAM_V_data_V, i4* %INPUT_STREAM_V_keep_V, i4* %INPUT_STREAM_V_strb_V, i1* %INPUT_STREAM_V_user_V, i1* %INPUT_STREAM_V_last_V, i1* %INPUT_STREAM_V_id_V, i1* %INPUT_STREAM_V_dest_V, i8* %img_input_data_stream_0_V, i8* %img_input_data_stream_1_V, i8* %img_input_data_stream_2_V)

ST_1: stg_86 [1/1] 1.57ns
:33  store i32 0, i32* %col_c2_1

ST_1: stg_87 [1/1] 1.57ns
:34  store i32 0, i32* %row_c2_1


 <State 2>: 1.57ns
ST_2: stg_88 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i32* %INPUT_STREAM_V_data_V), !map !151

ST_2: stg_89 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i4* %INPUT_STREAM_V_keep_V), !map !155

ST_2: stg_90 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap(i4* %INPUT_STREAM_V_strb_V), !map !159

ST_2: stg_91 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecBitsMap(i1* %INPUT_STREAM_V_user_V), !map !163

ST_2: stg_92 [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecBitsMap(i1* %INPUT_STREAM_V_last_V), !map !167

ST_2: stg_93 [1/1] 0.00ns
:10  call void (...)* @_ssdm_op_SpecBitsMap(i1* %INPUT_STREAM_V_id_V), !map !171

ST_2: stg_94 [1/1] 0.00ns
:11  call void (...)* @_ssdm_op_SpecBitsMap(i1* %INPUT_STREAM_V_dest_V), !map !175

ST_2: stg_95 [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecBitsMap(i32* %OUTPUT_STREAM_V_data_V), !map !179

ST_2: stg_96 [1/1] 0.00ns
:13  call void (...)* @_ssdm_op_SpecBitsMap(i4* %OUTPUT_STREAM_V_keep_V), !map !183

ST_2: stg_97 [1/1] 0.00ns
:14  call void (...)* @_ssdm_op_SpecBitsMap(i4* %OUTPUT_STREAM_V_strb_V), !map !187

ST_2: stg_98 [1/1] 0.00ns
:15  call void (...)* @_ssdm_op_SpecBitsMap(i1* %OUTPUT_STREAM_V_user_V), !map !191

ST_2: stg_99 [1/1] 0.00ns
:16  call void (...)* @_ssdm_op_SpecBitsMap(i1* %OUTPUT_STREAM_V_last_V), !map !195

ST_2: stg_100 [1/1] 0.00ns
:17  call void (...)* @_ssdm_op_SpecBitsMap(i1* %OUTPUT_STREAM_V_id_V), !map !199

ST_2: stg_101 [1/1] 0.00ns
:18  call void (...)* @_ssdm_op_SpecBitsMap(i1* %OUTPUT_STREAM_V_dest_V), !map !203

ST_2: stg_102 [1/1] 0.00ns
:19  call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @net_str) nounwind

ST_2: empty [1/1] 0.00ns
:21  %empty = call i32 (...)* @_ssdm_op_SpecChannel([27 x i8]* @img_input_OC_data_stream_LF_0_s, i32 1, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 1, i32 1, i8* %img_input_data_stream_0_V, i8* %img_input_data_stream_0_V)

ST_2: stg_104 [1/1] 0.00ns
:22  call void (...)* @_ssdm_op_SpecInterface(i8* %img_input_data_stream_0_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str)

ST_2: empty_6 [1/1] 0.00ns
:24  %empty_6 = call i32 (...)* @_ssdm_op_SpecChannel([27 x i8]* @img_input_OC_data_stream_LF_1_s, i32 1, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 1, i32 1, i8* %img_input_data_stream_1_V, i8* %img_input_data_stream_1_V)

ST_2: stg_106 [1/1] 0.00ns
:25  call void (...)* @_ssdm_op_SpecInterface(i8* %img_input_data_stream_1_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str)

ST_2: empty_7 [1/1] 0.00ns
:27  %empty_7 = call i32 (...)* @_ssdm_op_SpecChannel([27 x i8]* @img_input_OC_data_stream_LF_2_s, i32 1, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 1, i32 1, i8* %img_input_data_stream_2_V, i8* %img_input_data_stream_2_V)

ST_2: stg_108 [1/1] 0.00ns
:28  call void (...)* @_ssdm_op_SpecInterface(i8* %img_input_data_stream_2_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str)

ST_2: stg_109 [1/1] 0.00ns
:29  call void (...)* @_ssdm_op_SpecInterface(i32* %INPUT_STREAM_V_data_V, i4* %INPUT_STREAM_V_keep_V, i4* %INPUT_STREAM_V_strb_V, i1* %INPUT_STREAM_V_user_V, i1* %INPUT_STREAM_V_last_V, i1* %INPUT_STREAM_V_id_V, i1* %INPUT_STREAM_V_dest_V, [5 x i8]* @p_str1805, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1806) nounwind

ST_2: stg_110 [1/1] 0.00ns
:30  call void (...)* @_ssdm_op_SpecInterface(i32* %OUTPUT_STREAM_V_data_V, i4* %OUTPUT_STREAM_V_keep_V, i4* %OUTPUT_STREAM_V_strb_V, i1* %OUTPUT_STREAM_V_user_V, i1* %OUTPUT_STREAM_V_last_V, i1* %OUTPUT_STREAM_V_id_V, i1* %OUTPUT_STREAM_V_dest_V, [5 x i8]* @p_str1805, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1806) nounwind

ST_2: stg_111 [1/1] 0.00ns
:31  call void (...)* @_ssdm_op_SpecIFCore(i32 0, [1 x i8]* @p_str1806, [10 x i8]* @p_str1807, [1 x i8]* @p_str1806, i32 -1, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806, [24 x i8]* @p_str1808)

ST_2: stg_112 [1/2] 0.00ns
:32  call fastcc void @"net_AXIvideo2Mat<32, 28, 28, 4096>"(i32* %INPUT_STREAM_V_data_V, i4* %INPUT_STREAM_V_keep_V, i4* %INPUT_STREAM_V_strb_V, i1* %INPUT_STREAM_V_user_V, i1* %INPUT_STREAM_V_last_V, i1* %INPUT_STREAM_V_id_V, i1* %INPUT_STREAM_V_dest_V, i8* %img_input_data_stream_0_V, i8* %img_input_data_stream_1_V, i8* %img_input_data_stream_2_V)

ST_2: stg_113 [1/1] 1.57ns
:35  br label %.preheader


 <State 3>: 10.66ns
ST_3: indvar_flatten [1/1] 0.00ns
.preheader:0  %indvar_flatten = phi i10 [ 0, %0 ], [ %indvar_flatten_next, %._crit_edge23 ]

ST_3: row_assign [1/1] 0.00ns
.preheader:1  %row_assign = phi i5 [ 0, %0 ], [ %row_assign_mid2, %._crit_edge23 ]

ST_3: col_assign [1/1] 0.00ns
.preheader:2  %col_assign = phi i5 [ 0, %0 ], [ %col, %._crit_edge23 ]

ST_3: tmp_i [1/1] 1.91ns
.preheader:3  %tmp_i = icmp ugt i5 %row_assign, 2

ST_3: tmp_5_i [1/1] 1.91ns
.preheader:4  %tmp_5_i = icmp ult i5 %row_assign, -7

ST_3: tmp3 [1/1] 1.37ns
.preheader:5  %tmp3 = and i1 %tmp_5_i, %tmp_i

ST_3: exitcond_flatten [1/1] 2.07ns
.preheader:6  %exitcond_flatten = icmp eq i10 %indvar_flatten, -240

ST_3: indvar_flatten_next [1/1] 1.84ns
.preheader:7  %indvar_flatten_next = add i10 %indvar_flatten, 1

ST_3: stg_122 [1/1] 0.00ns
.preheader:8  br i1 %exitcond_flatten, label %4, label %.preheader.preheader

ST_3: row [1/1] 1.72ns
.preheader.preheader:2  %row = add i5 %row_assign, 1

ST_3: exitcond4 [1/1] 1.91ns
.preheader.preheader:4  %exitcond4 = icmp eq i5 %col_assign, -4

ST_3: col_assign_mid2 [1/1] 1.37ns
.preheader.preheader:5  %col_assign_mid2 = select i1 %exitcond4, i5 0, i5 %col_assign

ST_3: tmp_i_mid1 [1/1] 1.91ns
.preheader.preheader:6  %tmp_i_mid1 = icmp ugt i5 %row, 2

ST_3: tmp_5_i_mid1 [1/1] 1.91ns
.preheader.preheader:7  %tmp_5_i_mid1 = icmp ult i5 %row, -7

ST_3: tmp3_mid1 [1/1] 0.00ns (grouped into LUT with out node compute_1)
.preheader.preheader:8  %tmp3_mid1 = and i1 %tmp_5_i_mid1, %tmp_i_mid1

ST_3: tmp3_mid2 [1/1] 0.00ns (grouped into LUT with out node compute_1)
.preheader.preheader:9  %tmp3_mid2 = select i1 %exitcond4, i1 %tmp3_mid1, i1 %tmp3

ST_3: row_assign_mid2 [1/1] 1.37ns
.preheader.preheader:10  %row_assign_mid2 = select i1 %exitcond4, i5 %row, i5 %row_assign

ST_3: tmp_6_i [1/1] 1.91ns
.preheader.preheader:19  %tmp_6_i = icmp ugt i5 %col_assign_mid2, 2

ST_3: tmp_8_i [1/1] 1.91ns
.preheader.preheader:20  %tmp_8_i = icmp ult i5 %col_assign_mid2, -7

ST_3: tmp2 [1/1] 0.00ns (grouped into LUT with out node compute_1)
.preheader.preheader:21  %tmp2 = and i1 %tmp_6_i, %tmp_8_i

ST_3: compute_1 [1/1] 1.37ns (out node of the LUT)
.preheader.preheader:22  %compute_1 = and i1 %tmp3_mid2, %tmp2

ST_3: tmp_26 [1/1] 1.91ns
.preheader.preheader:86  %tmp_26 = icmp eq i5 %col_assign_mid2, -1

ST_3: tmp_27 [1/1] 1.91ns
.preheader.preheader:87  %tmp_27 = icmp eq i5 %col_assign_mid2, -2

ST_3: tmp_28 [1/1] 0.00ns (grouped into LUT with out node tmp_36)
.preheader.preheader:88  %tmp_28 = or i1 %tmp_27, %tmp_26

ST_3: tmp_29 [1/1] 1.91ns
.preheader.preheader:89  %tmp_29 = icmp eq i5 %col_assign_mid2, -3

ST_3: tmp_30 [1/1] 0.00ns (grouped into LUT with out node tmp_36)
.preheader.preheader:90  %tmp_30 = or i1 %tmp_29, %tmp_28

ST_3: tmp_31 [1/1] 1.91ns
.preheader.preheader:91  %tmp_31 = icmp eq i5 %col_assign_mid2, -5

ST_3: tmp_32 [1/1] 0.00ns (grouped into LUT with out node tmp_36)
.preheader.preheader:92  %tmp_32 = or i1 %tmp_31, %tmp_30

ST_3: tmp_33 [1/1] 1.91ns
.preheader.preheader:93  %tmp_33 = icmp eq i5 %col_assign_mid2, -6

ST_3: tmp_34 [1/1] 0.00ns (grouped into LUT with out node tmp_36)
.preheader.preheader:94  %tmp_34 = or i1 %tmp_33, %tmp_32

ST_3: tmp_35 [1/1] 1.91ns
.preheader.preheader:95  %tmp_35 = icmp eq i5 %col_assign_mid2, -7

ST_3: tmp_36 [1/1] 1.37ns (out node of the LUT)
.preheader.preheader:96  %tmp_36 = or i1 %tmp_35, %tmp_34

ST_3: tmp_37 [1/1] 1.91ns
.preheader.preheader:97  %tmp_37 = icmp eq i5 %col_assign_mid2, 2

ST_3: tmp_38 [1/1] 0.00ns (grouped into LUT with out node tmp_42)
.preheader.preheader:98  %tmp_38 = or i1 %tmp_37, %tmp_36

ST_3: tmp_39 [1/1] 1.91ns
.preheader.preheader:99  %tmp_39 = icmp eq i5 %col_assign_mid2, 1

ST_3: tmp_40 [1/1] 0.00ns (grouped into LUT with out node tmp_42)
.preheader.preheader:100  %tmp_40 = or i1 %tmp_39, %tmp_38

ST_3: tmp_41 [1/1] 1.91ns
.preheader.preheader:101  %tmp_41 = icmp eq i5 %col_assign_mid2, 0

ST_3: tmp_42 [1/1] 1.37ns (out node of the LUT)
.preheader.preheader:102  %tmp_42 = or i1 %tmp_41, %tmp_40

ST_3: stg_152 [1/1] 0.00ns
.preheader.preheader:103  br i1 %tmp_42, label %._crit_edge_ifconv, label %switch.early.test

ST_3: tmp_43 [1/1] 1.91ns
switch.early.test:0  %tmp_43 = icmp eq i5 %row_assign_mid2, -1

ST_3: tmp_44 [1/1] 1.91ns
switch.early.test:1  %tmp_44 = icmp eq i5 %row_assign_mid2, -2

ST_3: tmp_45 [1/1] 0.00ns (grouped into LUT with out node tmp_53)
switch.early.test:2  %tmp_45 = or i1 %tmp_44, %tmp_43

ST_3: tmp_46 [1/1] 1.91ns
switch.early.test:3  %tmp_46 = icmp eq i5 %row_assign_mid2, -3

ST_3: tmp_47 [1/1] 0.00ns (grouped into LUT with out node tmp_53)
switch.early.test:4  %tmp_47 = or i1 %tmp_46, %tmp_45

ST_3: tmp_48 [1/1] 1.91ns
switch.early.test:5  %tmp_48 = icmp eq i5 %row_assign_mid2, -4

ST_3: tmp_49 [1/1] 0.00ns (grouped into LUT with out node tmp_53)
switch.early.test:6  %tmp_49 = or i1 %tmp_48, %tmp_47

ST_3: tmp_50 [1/1] 1.91ns
switch.early.test:7  %tmp_50 = icmp eq i5 %row_assign_mid2, -5

ST_3: tmp_51 [1/1] 0.00ns (grouped into LUT with out node tmp_53)
switch.early.test:8  %tmp_51 = or i1 %tmp_50, %tmp_49

ST_3: tmp_52 [1/1] 1.91ns
switch.early.test:9  %tmp_52 = icmp eq i5 %row_assign_mid2, -6

ST_3: tmp_53 [1/1] 1.37ns (out node of the LUT)
switch.early.test:10  %tmp_53 = or i1 %tmp_52, %tmp_51

ST_3: tmp_54 [1/1] 1.91ns
switch.early.test:11  %tmp_54 = icmp eq i5 %row_assign_mid2, -7

ST_3: tmp_55 [1/1] 0.00ns (grouped into LUT with out node tmp_61)
switch.early.test:12  %tmp_55 = or i1 %tmp_54, %tmp_53

ST_3: tmp_56 [1/1] 1.91ns
switch.early.test:13  %tmp_56 = icmp eq i5 %row_assign_mid2, 2

ST_3: tmp_57 [1/1] 0.00ns (grouped into LUT with out node tmp_61)
switch.early.test:14  %tmp_57 = or i1 %tmp_56, %tmp_55

ST_3: tmp_58 [1/1] 1.91ns
switch.early.test:15  %tmp_58 = icmp eq i5 %row_assign_mid2, 1

ST_3: tmp_59 [1/1] 0.00ns (grouped into LUT with out node tmp_61)
switch.early.test:16  %tmp_59 = or i1 %tmp_58, %tmp_57

ST_3: tmp_60 [1/1] 1.91ns
switch.early.test:17  %tmp_60 = icmp eq i5 %row_assign_mid2, 0

ST_3: tmp_61 [1/1] 1.37ns (out node of the LUT)
switch.early.test:18  %tmp_61 = or i1 %tmp_60, %tmp_59

ST_3: stg_172 [1/1] 0.00ns
switch.early.test:19  br i1 %tmp_61, label %._crit_edge_ifconv, label %1

ST_3: col_c2_1_load [1/1] 0.00ns
:0  %col_c2_1_load = load i32* %col_c2_1

ST_3: tmp_3 [1/1] 2.44ns
:1  %tmp_3 = add nsw i32 1, %col_c2_1_load

ST_3: col_c2 [36/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26

ST_3: tmp_63 [1/1] 1.91ns
._crit_edge_ifconv:9  %tmp_63 = icmp eq i5 %col_assign_mid2, -1

ST_3: tmp_64 [1/1] 1.91ns
._crit_edge_ifconv:10  %tmp_64 = icmp eq i5 %col_assign_mid2, -2

ST_3: tmp_65 [1/1] 0.00ns (grouped into LUT with out node tmp_73)
._crit_edge_ifconv:11  %tmp_65 = or i1 %tmp_64, %tmp_63

ST_3: tmp_66 [1/1] 1.91ns
._crit_edge_ifconv:12  %tmp_66 = icmp eq i5 %col_assign_mid2, -3

ST_3: tmp_67 [1/1] 0.00ns (grouped into LUT with out node tmp_73)
._crit_edge_ifconv:13  %tmp_67 = or i1 %tmp_66, %tmp_65

ST_3: tmp_68 [1/1] 1.91ns
._crit_edge_ifconv:14  %tmp_68 = icmp eq i5 %col_assign_mid2, -5

ST_3: tmp_69 [1/1] 0.00ns (grouped into LUT with out node tmp_73)
._crit_edge_ifconv:15  %tmp_69 = or i1 %tmp_68, %tmp_67

ST_3: tmp_70 [1/1] 1.91ns
._crit_edge_ifconv:16  %tmp_70 = icmp eq i5 %col_assign_mid2, -6

ST_3: tmp_71 [1/1] 0.00ns (grouped into LUT with out node tmp_73)
._crit_edge_ifconv:17  %tmp_71 = or i1 %tmp_70, %tmp_69

ST_3: tmp_72 [1/1] 1.91ns
._crit_edge_ifconv:18  %tmp_72 = icmp eq i5 %col_assign_mid2, -7

ST_3: tmp_73 [1/1] 1.37ns (out node of the LUT)
._crit_edge_ifconv:19  %tmp_73 = or i1 %tmp_72, %tmp_71

ST_3: tmp_74 [1/1] 1.91ns
._crit_edge_ifconv:20  %tmp_74 = icmp eq i5 %col_assign_mid2, 2

ST_3: tmp_75 [1/1] 0.00ns (grouped into LUT with out node tmp_79)
._crit_edge_ifconv:21  %tmp_75 = or i1 %tmp_74, %tmp_73

ST_3: tmp_76 [1/1] 1.91ns
._crit_edge_ifconv:22  %tmp_76 = icmp eq i5 %col_assign_mid2, 1

ST_3: tmp_77 [1/1] 0.00ns (grouped into LUT with out node tmp_79)
._crit_edge_ifconv:23  %tmp_77 = or i1 %tmp_76, %tmp_75

ST_3: tmp_78 [1/1] 1.91ns
._crit_edge_ifconv:24  %tmp_78 = icmp eq i5 %col_assign_mid2, 0

ST_3: tmp_79 [1/1] 1.37ns (out node of the LUT)
._crit_edge_ifconv:25  %tmp_79 = or i1 %tmp_78, %tmp_77

ST_3: stg_193 [1/1] 0.00ns
._crit_edge_ifconv:26  br i1 %tmp_79, label %"conv<1u, 3u, 2u, 26u, unsigned char, unsigned char>.exit", label %switch.early.test18

ST_3: tmp_80 [1/1] 1.91ns
switch.early.test18:0  %tmp_80 = icmp eq i5 %row_assign_mid2, -1

ST_3: tmp_81 [1/1] 1.91ns
switch.early.test18:1  %tmp_81 = icmp eq i5 %row_assign_mid2, -2

ST_3: tmp_82 [1/1] 0.00ns (grouped into LUT with out node tmp_90)
switch.early.test18:2  %tmp_82 = or i1 %tmp_81, %tmp_80

ST_3: tmp_83 [1/1] 1.91ns
switch.early.test18:3  %tmp_83 = icmp eq i5 %row_assign_mid2, -3

ST_3: tmp_84 [1/1] 0.00ns (grouped into LUT with out node tmp_90)
switch.early.test18:4  %tmp_84 = or i1 %tmp_83, %tmp_82

ST_3: tmp_85 [1/1] 1.91ns
switch.early.test18:5  %tmp_85 = icmp eq i5 %row_assign_mid2, -4

ST_3: tmp_86 [1/1] 0.00ns (grouped into LUT with out node tmp_90)
switch.early.test18:6  %tmp_86 = or i1 %tmp_85, %tmp_84

ST_3: tmp_87 [1/1] 1.91ns
switch.early.test18:7  %tmp_87 = icmp eq i5 %row_assign_mid2, -5

ST_3: tmp_88 [1/1] 0.00ns (grouped into LUT with out node tmp_90)
switch.early.test18:8  %tmp_88 = or i1 %tmp_87, %tmp_86

ST_3: tmp_89 [1/1] 1.91ns
switch.early.test18:9  %tmp_89 = icmp eq i5 %row_assign_mid2, -6

ST_3: tmp_90 [1/1] 1.37ns (out node of the LUT)
switch.early.test18:10  %tmp_90 = or i1 %tmp_89, %tmp_88

ST_3: tmp_91 [1/1] 1.91ns
switch.early.test18:11  %tmp_91 = icmp eq i5 %row_assign_mid2, -7

ST_3: tmp_92 [1/1] 0.00ns (grouped into LUT with out node tmp_98)
switch.early.test18:12  %tmp_92 = or i1 %tmp_91, %tmp_90

ST_3: tmp_93 [1/1] 1.91ns
switch.early.test18:13  %tmp_93 = icmp eq i5 %row_assign_mid2, 2

ST_3: tmp_94 [1/1] 0.00ns (grouped into LUT with out node tmp_98)
switch.early.test18:14  %tmp_94 = or i1 %tmp_93, %tmp_92

ST_3: tmp_95 [1/1] 1.91ns
switch.early.test18:15  %tmp_95 = icmp eq i5 %row_assign_mid2, 1

ST_3: tmp_96 [1/1] 0.00ns (grouped into LUT with out node tmp_98)
switch.early.test18:16  %tmp_96 = or i1 %tmp_95, %tmp_94

ST_3: tmp_97 [1/1] 1.91ns
switch.early.test18:17  %tmp_97 = icmp eq i5 %row_assign_mid2, 0

ST_3: tmp_98 [1/1] 1.37ns (out node of the LUT)
switch.early.test18:18  %tmp_98 = or i1 %tmp_97, %tmp_96

ST_3: stg_213 [1/1] 0.00ns
switch.early.test18:19  br i1 %tmp_98, label %"conv<1u, 3u, 2u, 26u, unsigned char, unsigned char>.exit", label %.preheader15.preheader.i


 <State 4>: 6.27ns
ST_4: tmp [1/1] 0.00ns
.preheader.preheader:11  %tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str1809)

ST_4: tmp_i1_cast [1/1] 0.00ns
.preheader.preheader:23  %tmp_i1_cast = zext i5 %col_assign_mid2 to i8

ST_4: tmp_4 [1/1] 0.00ns
.preheader.preheader:24  %tmp_4 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %col_assign_mid2, i2 0)

ST_4: p_shl_cast [1/1] 0.00ns
.preheader.preheader:25  %p_shl_cast = zext i7 %tmp_4 to i8

ST_4: tmp_7 [1/1] 1.72ns
.preheader.preheader:26  %tmp_7 = sub i8 %p_shl_cast, %tmp_i1_cast

ST_4: tmp_7_cast5 [1/1] 0.00ns
.preheader.preheader:27  %tmp_7_cast5 = sext i8 %tmp_7 to i9

ST_4: tmp_8 [1/1] 1.72ns
.preheader.preheader:29  %tmp_8 = add i8 %tmp_7, 84

ST_4: tmp_8_cast [1/1] 0.00ns
.preheader.preheader:30  %tmp_8_cast = zext i8 %tmp_8 to i64

ST_4: line_buffer_1_addr [1/1] 0.00ns
.preheader.preheader:31  %line_buffer_1_addr = getelementptr [252 x i8]* @line_buffer_1, i64 0, i64 %tmp_8_cast

ST_4: tmp_9 [1/1] 1.84ns
.preheader.preheader:33  %tmp_9 = add i9 %tmp_7_cast5, 168

ST_4: tmp_9_cast [1/1] 0.00ns
.preheader.preheader:34  %tmp_9_cast = sext i9 %tmp_9 to i64

ST_4: line_buffer_1_addr_2 [1/1] 0.00ns
.preheader.preheader:35  %line_buffer_1_addr_2 = getelementptr [252 x i8]* @line_buffer_1, i64 0, i64 %tmp_9_cast

ST_4: line_buffer_1_load [2/2] 2.71ns
.preheader.preheader:54  %line_buffer_1_load = load i8* %line_buffer_1_addr, align 1

ST_4: line_buffer_1_load_1 [2/2] 2.71ns
.preheader.preheader:56  %line_buffer_1_load_1 = load i8* %line_buffer_1_addr_2, align 1

ST_4: col_c2 [35/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26

ST_4: empty_8 [1/1] 0.00ns
._crit_edge23:0  %empty_8 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str1809, i32 %tmp)

ST_4: col [1/1] 1.72ns
._crit_edge23:1  %col = add i5 %col_assign_mid2, 1

ST_4: stg_231 [1/1] 0.00ns
._crit_edge23:2  br label %.preheader


 <State 5>: 4.62ns
ST_5: tmp_s [1/1] 1.72ns
.preheader.preheader:36  %tmp_s = add i8 %tmp_7, 85

ST_5: tmp_10_cast [1/1] 0.00ns
.preheader.preheader:37  %tmp_10_cast = zext i8 %tmp_s to i64

ST_5: line_buffer_1_addr_3 [1/1] 0.00ns
.preheader.preheader:38  %line_buffer_1_addr_3 = getelementptr [252 x i8]* @line_buffer_1, i64 0, i64 %tmp_10_cast

ST_5: tmp_10 [1/1] 1.84ns
.preheader.preheader:42  %tmp_10 = add i9 %tmp_7_cast5, 169

ST_5: tmp_12_cast [1/1] 0.00ns
.preheader.preheader:43  %tmp_12_cast = sext i9 %tmp_10 to i64

ST_5: line_buffer_1_addr_5 [1/1] 0.00ns
.preheader.preheader:44  %line_buffer_1_addr_5 = getelementptr [252 x i8]* @line_buffer_1, i64 0, i64 %tmp_12_cast

ST_5: line_buffer_1_load [1/2] 2.71ns
.preheader.preheader:54  %line_buffer_1_load = load i8* %line_buffer_1_addr, align 1

ST_5: line_buffer_1_load_1 [1/2] 2.71ns
.preheader.preheader:56  %line_buffer_1_load_1 = load i8* %line_buffer_1_addr_2, align 1

ST_5: line_buffer_1_load_2 [2/2] 2.71ns
.preheader.preheader:59  %line_buffer_1_load_2 = load i8* %line_buffer_1_addr_3, align 1

ST_5: line_buffer_1_load_3 [2/2] 2.71ns
.preheader.preheader:61  %line_buffer_1_load_3 = load i8* %line_buffer_1_addr_5, align 1

ST_5: col_c2 [34/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 6>: 4.62ns
ST_6: tmp_11 [1/1] 1.72ns
.preheader.preheader:45  %tmp_11 = add i8 %tmp_7, 86

ST_6: tmp_13_cast [1/1] 0.00ns
.preheader.preheader:46  %tmp_13_cast = zext i8 %tmp_11 to i64

ST_6: line_buffer_1_addr_6 [1/1] 0.00ns
.preheader.preheader:47  %line_buffer_1_addr_6 = getelementptr [252 x i8]* @line_buffer_1, i64 0, i64 %tmp_13_cast

ST_6: tmp_13 [1/1] 1.84ns
.preheader.preheader:51  %tmp_13 = add i9 %tmp_7_cast5, 170

ST_6: tmp_15_cast [1/1] 0.00ns
.preheader.preheader:52  %tmp_15_cast = sext i9 %tmp_13 to i64

ST_6: line_buffer_1_addr_8 [1/1] 0.00ns
.preheader.preheader:53  %line_buffer_1_addr_8 = getelementptr [252 x i8]* @line_buffer_1, i64 0, i64 %tmp_15_cast

ST_6: line_buffer_1_load_2 [1/2] 2.71ns
.preheader.preheader:59  %line_buffer_1_load_2 = load i8* %line_buffer_1_addr_3, align 1

ST_6: line_buffer_1_load_3 [1/2] 2.71ns
.preheader.preheader:61  %line_buffer_1_load_3 = load i8* %line_buffer_1_addr_5, align 1

ST_6: line_buffer_1_load_4 [2/2] 2.71ns
.preheader.preheader:64  %line_buffer_1_load_4 = load i8* %line_buffer_1_addr_6, align 1

ST_6: line_buffer_1_load_5 [2/2] 2.71ns
.preheader.preheader:66  %line_buffer_1_load_5 = load i8* %line_buffer_1_addr_8, align 1

ST_6: col_c2 [33/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 7>: 4.62ns
ST_7: tmp_7_cast [1/1] 0.00ns
.preheader.preheader:28  %tmp_7_cast = sext i8 %tmp_7 to i64

ST_7: line_buffer_1_addr_1 [1/1] 0.00ns
.preheader.preheader:32  %line_buffer_1_addr_1 = getelementptr [252 x i8]* @line_buffer_1, i64 0, i64 %tmp_7_cast

ST_7: stg_256 [1/1] 2.71ns
.preheader.preheader:55  store i8 %line_buffer_1_load, i8* %line_buffer_1_addr_1, align 1

ST_7: stg_257 [1/1] 2.71ns
.preheader.preheader:57  store i8 %line_buffer_1_load_1, i8* %line_buffer_1_addr, align 1

ST_7: line_buffer_1_load_4 [1/2] 2.71ns
.preheader.preheader:64  %line_buffer_1_load_4 = load i8* %line_buffer_1_addr_6, align 1

ST_7: line_buffer_1_load_5 [1/2] 2.71ns
.preheader.preheader:66  %line_buffer_1_load_5 = load i8* %line_buffer_1_addr_8, align 1

ST_7: col_c2 [32/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 8>: 7.08ns
ST_8: tmp_2 [1/1] 0.00ns
.preheader.preheader:13  %tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str1811)

ST_8: stg_262 [1/1] 0.00ns
.preheader.preheader:14  call void (...)* @_ssdm_op_SpecProtocol(i32 0, [1 x i8]* @p_str1806) nounwind

ST_8: tmp_101 [1/1] 4.38ns
.preheader.preheader:15  %tmp_101 = call i8 @_ssdm_op_Read.ap_fifo.volatile.i8P(i8* %img_input_data_stream_0_V)

ST_8: tmp_102 [1/1] 4.38ns
.preheader.preheader:16  %tmp_102 = call i8 @_ssdm_op_Read.ap_fifo.volatile.i8P(i8* %img_input_data_stream_1_V)

ST_8: tmp_103 [1/1] 4.38ns
.preheader.preheader:17  %tmp_103 = call i8 @_ssdm_op_Read.ap_fifo.volatile.i8P(i8* %img_input_data_stream_2_V)

ST_8: empty_9 [1/1] 0.00ns
.preheader.preheader:18  %empty_9 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str1811, i32 %tmp_2)

ST_8: tmp_1 [1/1] 1.72ns
.preheader.preheader:39  %tmp_1 = add i9 %tmp_7_cast5, 1

ST_8: tmp_11_cast [1/1] 0.00ns
.preheader.preheader:40  %tmp_11_cast = sext i9 %tmp_1 to i64

ST_8: line_buffer_1_addr_4 [1/1] 0.00ns
.preheader.preheader:41  %line_buffer_1_addr_4 = getelementptr [252 x i8]* @line_buffer_1, i64 0, i64 %tmp_11_cast

ST_8: stg_270 [1/1] 2.71ns
.preheader.preheader:58  store i8 %tmp_101, i8* %line_buffer_1_addr_2, align 1

ST_8: stg_271 [1/1] 2.71ns
.preheader.preheader:60  store i8 %line_buffer_1_load_2, i8* %line_buffer_1_addr_4, align 1

ST_8: col_c2 [31/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 9>: 4.62ns
ST_9: stg_273 [1/1] 2.71ns
.preheader.preheader:62  store i8 %line_buffer_1_load_3, i8* %line_buffer_1_addr_3, align 1

ST_9: stg_274 [1/1] 2.71ns
.preheader.preheader:63  store i8 %tmp_102, i8* %line_buffer_1_addr_5, align 1

ST_9: col_c2 [30/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 10>: 6.96ns
ST_10: output_conv_1_1_1_load [1/1] 0.00ns
.preheader.preheader:1  %output_conv_1_1_1_load = load i8* %output_conv_1_1_1

ST_10: tmp_12 [1/1] 1.72ns
.preheader.preheader:48  %tmp_12 = add i9 %tmp_7_cast5, 2

ST_10: tmp_14_cast [1/1] 0.00ns
.preheader.preheader:49  %tmp_14_cast = sext i9 %tmp_12 to i64

ST_10: line_buffer_1_addr_7 [1/1] 0.00ns
.preheader.preheader:50  %line_buffer_1_addr_7 = getelementptr [252 x i8]* @line_buffer_1, i64 0, i64 %tmp_14_cast

ST_10: stg_280 [1/1] 2.71ns
.preheader.preheader:65  store i8 %line_buffer_1_load_4, i8* %line_buffer_1_addr_7, align 1

ST_10: stg_281 [1/1] 2.71ns
.preheader.preheader:67  store i8 %line_buffer_1_load_5, i8* %line_buffer_1_addr_6, align 1

ST_10: tmp_33_0_1_0_i [1/1] 1.72ns
.preheader.preheader:69  %tmp_33_0_1_0_i = sub i8 %output_conv_1_1_1_load, %tmp_101

ST_10: tmp_33_0_1_2_2_i [1/1] 1.31ns
.preheader.preheader:70  %tmp_33_0_1_2_2_i = sub i8 %tmp_33_0_1_0_i, %tmp_101

ST_10: tmp_29_0_1_i [1/1] 1.31ns
.preheader.preheader:71  %tmp_29_0_1_i = add i8 %tmp_33_0_1_2_2_i, -5

ST_10: tmp_33_1_1_0_i [1/1] 1.31ns
.preheader.preheader:72  %tmp_33_1_1_0_i = sub i8 %tmp_29_0_1_i, %tmp_102

ST_10: tmp_33_1_1_2_2_i [1/1] 1.31ns
.preheader.preheader:73  %tmp_33_1_1_2_2_i = sub i8 %tmp_33_1_1_0_i, %tmp_102

ST_10: tmp5 [1/1] 1.31ns
.preheader.preheader:75  %tmp5 = add i8 %tmp_103, %tmp_102

ST_10: tmp4 [1/1] 1.31ns
.preheader.preheader:76  %tmp4 = add i8 %tmp_101, %tmp5

ST_10: col_c2 [29/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 11>: 6.61ns
ST_11: output_conv_1_0_1_load [1/1] 0.00ns
.preheader.preheader:0  %output_conv_1_0_1_load = load i8* %output_conv_1_0_1

ST_11: stg_291 [1/1] 0.00ns
.preheader.preheader:3  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 784, i64 784, i64 784)

ST_11: stg_292 [1/1] 0.00ns
.preheader.preheader:12  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1806) nounwind

ST_11: stg_293 [1/1] 2.71ns
.preheader.preheader:68  store i8 %tmp_103, i8* %line_buffer_1_addr_8, align 1

ST_11: tmp_29_1_1_i [1/1] 1.31ns
.preheader.preheader:74  %tmp_29_1_1_i = add i8 %tmp_33_1_1_2_2_i, -5

ST_11: tmp6 [1/1] 1.31ns
.preheader.preheader:77  %tmp6 = add i8 %output_conv_1_0_1_load, 30

ST_11: tmp_29_2_i [1/1] 1.31ns
.preheader.preheader:78  %tmp_29_2_i = add i8 %tmp4, %tmp6

ST_11: tmp_33_2_1_0_i [1/1] 1.31ns
.preheader.preheader:79  %tmp_33_2_1_0_i = sub i8 %tmp_29_1_1_i, %tmp_103

ST_11: tmp_33_2_1_2_2_i [1/1] 1.31ns
.preheader.preheader:80  %tmp_33_2_1_2_2_i = sub i8 %tmp_33_2_1_0_i, %tmp_103

ST_11: tmp_29_2_1_i [1/1] 1.31ns
.preheader.preheader:81  %tmp_29_2_1_i = add i8 %tmp_33_2_1_2_2_i, -5

ST_11: output_conv_1_0 [1/1] 1.37ns
.preheader.preheader:82  %output_conv_1_0 = select i1 %compute_1, i8 %tmp_29_2_i, i8 %output_conv_1_0_1_load

ST_11: output_conv_1_1 [1/1] 1.37ns
.preheader.preheader:83  %output_conv_1_1 = select i1 %compute_1, i8 %tmp_29_2_1_i, i8 %output_conv_1_1_1_load

ST_11: stg_302 [1/1] 0.00ns
.preheader.preheader:84  store i8 %output_conv_1_1, i8* %output_conv_1_1_1

ST_11: stg_303 [1/1] 0.00ns
.preheader.preheader:85  store i8 %output_conv_1_0, i8* %output_conv_1_0_1

ST_11: col_c2 [28/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 12>: 4.62ns
ST_12: col_c2 [27/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 13>: 4.62ns
ST_13: col_c2 [26/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 14>: 4.62ns
ST_14: col_c2 [25/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 15>: 4.62ns
ST_15: col_c2 [24/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 16>: 4.62ns
ST_16: col_c2 [23/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 17>: 4.62ns
ST_17: col_c2 [22/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 18>: 4.62ns
ST_18: col_c2 [21/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 19>: 4.62ns
ST_19: col_c2 [20/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 20>: 4.62ns
ST_20: col_c2 [19/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 21>: 4.62ns
ST_21: col_c2 [18/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 22>: 4.62ns
ST_22: col_c2 [17/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 23>: 4.62ns
ST_23: col_c2 [16/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 24>: 4.62ns
ST_24: col_c2 [15/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 25>: 4.62ns
ST_25: col_c2 [14/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 26>: 4.62ns
ST_26: col_c2 [13/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 27>: 4.62ns
ST_27: col_c2 [12/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 28>: 4.62ns
ST_28: col_c2 [11/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 29>: 4.62ns
ST_29: col_c2 [10/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 30>: 4.62ns
ST_30: col_c2 [9/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 31>: 4.62ns
ST_31: col_c2 [8/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 32>: 4.62ns
ST_32: col_c2 [7/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 33>: 4.62ns
ST_33: col_c2 [6/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 34>: 4.62ns
ST_34: col_c2 [5/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 35>: 4.62ns
ST_35: col_c2 [4/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 36>: 4.62ns
ST_36: col_c2 [3/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 37>: 4.62ns
ST_37: col_c2 [2/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26


 <State 38>: 7.93ns
ST_38: col_c2 [1/36] 4.62ns
:2  %col_c2 = srem i32 %tmp_3, 26

ST_38: tmp_62 [1/1] 0.00ns
:3  %tmp_62 = trunc i32 %col_c2 to i6

ST_38: tmp_5 [1/1] 1.94ns
:4  %tmp_5 = icmp eq i6 %tmp_62, 0

ST_38: stg_334 [1/1] 0.00ns
:5  br i1 %tmp_5, label %2, label %._crit_edge_ifconv.pre

ST_38: stg_335 [1/1] 1.57ns
._crit_edge_ifconv.pre:0  store i32 %col_c2, i32* %col_c2_1

ST_38: stg_336 [1/1] 0.00ns
._crit_edge_ifconv.pre:1  br label %._crit_edge_ifconv

ST_38: row_c2_1_load [1/1] 0.00ns
:0  %row_c2_1_load = load i32* %row_c2_1

ST_38: tmp_6 [1/1] 2.44ns
:1  %tmp_6 = add nsw i32 %row_c2_1_load, 1

ST_38: row_c2 [36/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26

ST_38: stg_340 [1/1] 1.57ns
:3  store i32 0, i32* %col_c2_1


 <State 39>: 4.62ns
ST_39: row_c2 [35/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26

ST_39: col_c2_1_load_1 [1/1] 0.00ns
._crit_edge_ifconv:1  %col_c2_1_load_1 = load i32* %col_c2_1

ST_39: tmp_99 [1/1] 0.00ns
.preheader15.preheader.i:2  %tmp_99 = trunc i32 %col_c2_1_load_1 to i8

ST_39: tmp_17_cast [1/1] 0.00ns
.preheader15.preheader.i:3  %tmp_17_cast = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %tmp_99, i1 false)

ST_39: tmp_16 [1/1] 1.84ns
.preheader15.preheader.i:4  %tmp_16 = add i9 52, %tmp_17_cast

ST_39: tmp_18_cast [1/1] 0.00ns
.preheader15.preheader.i:5  %tmp_18_cast = sext i9 %tmp_16 to i64

ST_39: line_buffer_addr [1/1] 0.00ns
.preheader15.preheader.i:6  %line_buffer_addr = getelementptr [156 x i8]* @line_buffer, i64 0, i64 %tmp_18_cast

ST_39: line_buffer_load [2/2] 2.71ns
.preheader15.preheader.i:20  %line_buffer_load = load i8* %line_buffer_addr, align 2


 <State 40>: 5.42ns
ST_40: row_c2 [34/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26

ST_40: tmp_6_i1 [1/1] 2.52ns
._crit_edge_ifconv:4  %tmp_6_i1 = icmp sgt i32 %col_c2_1_load_1, 2

ST_40: tmp_8_i1 [1/1] 2.52ns
._crit_edge_ifconv:5  %tmp_8_i1 = icmp slt i32 %col_c2_1_load_1, 23

ST_40: tmp_14 [1/1] 0.00ns
.preheader15.preheader.i:0  %tmp_14 = call i33 @_ssdm_op_BitConcatenate.i33.i32.i1(i32 %col_c2_1_load_1, i1 false)

ST_40: tmp_15 [1/1] 0.00ns
.preheader15.preheader.i:1  %tmp_15 = zext i33 %tmp_14 to i64

ST_40: line_buffer_addr_1 [1/1] 0.00ns
.preheader15.preheader.i:7  %line_buffer_addr_1 = getelementptr [156 x i8]* @line_buffer, i64 0, i64 %tmp_15

ST_40: line_buffer_load [1/2] 2.71ns
.preheader15.preheader.i:20  %line_buffer_load = load i8* %line_buffer_addr, align 2

ST_40: stg_356 [1/1] 2.71ns
.preheader15.preheader.i:21  store i8 %line_buffer_load, i8* %line_buffer_addr_1, align 2


 <State 41>: 4.62ns
ST_41: row_c2 [33/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26

ST_41: tmp_17 [1/1] 1.84ns
.preheader15.preheader.i:8  %tmp_17 = add i9 104, %tmp_17_cast

ST_41: tmp_19_cast [1/1] 0.00ns
.preheader15.preheader.i:9  %tmp_19_cast = sext i9 %tmp_17 to i64

ST_41: line_buffer_addr_2 [1/1] 0.00ns
.preheader15.preheader.i:10  %line_buffer_addr_2 = getelementptr [156 x i8]* @line_buffer, i64 0, i64 %tmp_19_cast

ST_41: tmp_18 [1/1] 1.84ns
.preheader15.preheader.i:11  %tmp_18 = add i9 53, %tmp_17_cast

ST_41: tmp_20_cast [1/1] 0.00ns
.preheader15.preheader.i:12  %tmp_20_cast = sext i9 %tmp_18 to i64

ST_41: line_buffer_addr_3 [1/1] 0.00ns
.preheader15.preheader.i:13  %line_buffer_addr_3 = getelementptr [156 x i8]* @line_buffer, i64 0, i64 %tmp_20_cast

ST_41: tmp_21 [1/1] 1.84ns
.preheader15.preheader.i:17  %tmp_21 = add i9 105, %tmp_17_cast

ST_41: tmp_23_cast [1/1] 0.00ns
.preheader15.preheader.i:18  %tmp_23_cast = sext i9 %tmp_21 to i64

ST_41: line_buffer_addr_5 [1/1] 0.00ns
.preheader15.preheader.i:19  %line_buffer_addr_5 = getelementptr [156 x i8]* @line_buffer, i64 0, i64 %tmp_23_cast

ST_41: line_buffer_load_1 [2/2] 2.71ns
.preheader15.preheader.i:22  %line_buffer_load_1 = load i8* %line_buffer_addr_2, align 2

ST_41: line_buffer_load_2 [2/2] 2.71ns
.preheader15.preheader.i:25  %line_buffer_load_2 = load i8* %line_buffer_addr_3, align 1


 <State 42>: 5.42ns
ST_42: row_c2 [32/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26

ST_42: line_buffer_load_1 [1/2] 2.71ns
.preheader15.preheader.i:22  %line_buffer_load_1 = load i8* %line_buffer_addr_2, align 2

ST_42: stg_371 [1/1] 2.71ns
.preheader15.preheader.i:23  store i8 %line_buffer_load_1, i8* %line_buffer_addr, align 2

ST_42: stg_372 [1/1] 2.71ns
.preheader15.preheader.i:24  store i8 %output_conv_1_0, i8* %line_buffer_addr_2, align 2

ST_42: line_buffer_load_2 [1/2] 2.71ns
.preheader15.preheader.i:25  %line_buffer_load_2 = load i8* %line_buffer_addr_3, align 1


 <State 43>: 4.62ns
ST_43: row_c2 [31/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26

ST_43: tmp_19 [1/1] 0.00ns
.preheader15.preheader.i:14  %tmp_19 = or i33 %tmp_14, 1

ST_43: tmp_20 [1/1] 0.00ns
.preheader15.preheader.i:15  %tmp_20 = call i64 @_ssdm_op_BitConcatenate.i64.i31.i33(i31 0, i33 %tmp_19)

ST_43: line_buffer_addr_4 [1/1] 0.00ns
.preheader15.preheader.i:16  %line_buffer_addr_4 = getelementptr [156 x i8]* @line_buffer, i64 0, i64 %tmp_20

ST_43: stg_378 [1/1] 2.71ns
.preheader15.preheader.i:26  store i8 %line_buffer_load_2, i8* %line_buffer_addr_4, align 1


 <State 44>: 4.62ns
ST_44: row_c2 [30/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26

ST_44: line_buffer_load_3 [2/2] 2.71ns
.preheader15.preheader.i:27  %line_buffer_load_3 = load i8* %line_buffer_addr_5, align 1


 <State 45>: 5.42ns
ST_45: row_c2 [29/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26

ST_45: line_buffer_load_3 [1/2] 2.71ns
.preheader15.preheader.i:27  %line_buffer_load_3 = load i8* %line_buffer_addr_5, align 1

ST_45: stg_383 [1/1] 2.71ns
.preheader15.preheader.i:28  store i8 %line_buffer_load_3, i8* %line_buffer_addr_3, align 1

ST_45: stg_384 [1/1] 2.71ns
.preheader15.preheader.i:29  store i8 %output_conv_1_1, i8* %line_buffer_addr_5, align 1


 <State 46>: 4.62ns
ST_46: row_c2 [28/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26


 <State 47>: 4.62ns
ST_47: row_c2 [27/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26


 <State 48>: 4.62ns
ST_48: row_c2 [26/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26


 <State 49>: 4.62ns
ST_49: row_c2 [25/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26


 <State 50>: 4.62ns
ST_50: row_c2 [24/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26


 <State 51>: 4.62ns
ST_51: row_c2 [23/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26


 <State 52>: 4.62ns
ST_52: row_c2 [22/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26


 <State 53>: 4.62ns
ST_53: row_c2 [21/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26


 <State 54>: 4.62ns
ST_54: row_c2 [20/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26


 <State 55>: 4.62ns
ST_55: row_c2 [19/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26


 <State 56>: 4.62ns
ST_56: row_c2 [18/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26


 <State 57>: 4.62ns
ST_57: row_c2 [17/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26


 <State 58>: 4.62ns
ST_58: row_c2 [16/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26


 <State 59>: 4.62ns
ST_59: row_c2 [15/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26


 <State 60>: 4.62ns
ST_60: row_c2 [14/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26


 <State 61>: 4.62ns
ST_61: row_c2 [13/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26


 <State 62>: 4.62ns
ST_62: row_c2 [12/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26


 <State 63>: 4.62ns
ST_63: row_c2 [11/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26


 <State 64>: 4.62ns
ST_64: row_c2 [10/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26


 <State 65>: 4.62ns
ST_65: row_c2 [9/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26


 <State 66>: 4.62ns
ST_66: row_c2 [8/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26


 <State 67>: 4.62ns
ST_67: row_c2 [7/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26


 <State 68>: 4.62ns
ST_68: row_c2 [6/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26


 <State 69>: 4.62ns
ST_69: row_c2 [5/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26


 <State 70>: 4.62ns
ST_70: row_c2 [4/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26


 <State 71>: 4.62ns
ST_71: row_c2 [3/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26


 <State 72>: 4.62ns
ST_72: row_c2 [2/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26


 <State 73>: 6.19ns
ST_73: row_c2 [1/36] 4.62ns
:2  %row_c2 = srem i32 %tmp_6, 26

ST_73: stg_413 [1/1] 1.57ns
:4  store i32 %row_c2, i32* %row_c2_1

ST_73: stg_414 [1/1] 0.00ns
:5  br label %._crit_edge_ifconv


 <State 74>: 4.34ns
ST_74: row_c2_1_load_1 [1/1] 0.00ns
._crit_edge_ifconv:0  %row_c2_1_load_1 = load i32* %row_c2_1

ST_74: tmp_i2 [1/1] 2.52ns
._crit_edge_ifconv:2  %tmp_i2 = icmp sgt i32 %row_c2_1_load_1, 2

ST_74: tmp_5_i1 [1/1] 2.52ns
._crit_edge_ifconv:3  %tmp_5_i1 = icmp slt i32 %row_c2_1_load_1, 23

ST_74: tmp7 [1/1] 0.00ns (grouped into LUT with out node compute_2)
._crit_edge_ifconv:6  %tmp7 = and i1 %tmp_6_i1, %tmp_8_i1

ST_74: tmp8 [1/1] 0.00ns (grouped into LUT with out node compute_2)
._crit_edge_ifconv:7  %tmp8 = and i1 %tmp_5_i1, %tmp_i2

ST_74: compute_2 [1/1] 1.37ns (out node of the LUT)
._crit_edge_ifconv:8  %compute_2 = and i1 %tmp8, %tmp7

ST_74: stg_421 [1/1] 0.00ns
.preheader15.preheader.i:30  br i1 %compute_2, label %.preheader9.preheader.0.i, label %._crit_edge23

ST_74: v_load [1/1] 0.00ns
.preheader9.preheader.0.i:0  %v_load = load i8* %v

ST_74: tmp9 [1/1] 1.72ns
.preheader9.preheader.0.i:1  %tmp9 = add i8 %v_load, %output_conv_1_0

ST_74: tmp10 [1/1] 1.31ns
.preheader9.preheader.0.i:2  %tmp10 = add i8 %tmp9, %output_conv_1_0

ST_74: tmp_100 [1/1] 0.00ns (grouped into LUT with out node tmp12)
.preheader9.preheader.0.i:3  %tmp_100 = shl i8 %output_conv_1_1, 1

ST_74: tmp12 [1/1] 1.72ns (out node of the LUT)
.preheader9.preheader.0.i:4  %tmp12 = add i8 40, %tmp_100

ST_74: tmp_43_1_i [1/1] 1.31ns
.preheader9.preheader.0.i:5  %tmp_43_1_i = add i8 %tmp12, %tmp10

ST_74: stg_428 [1/1] 0.00ns
.preheader9.preheader.0.i:6  store i8 %tmp_43_1_i, i8* %v

ST_74: stg_429 [1/1] 0.00ns
.preheader9.preheader.0.i:7  br label %"conv<1u, 3u, 2u, 26u, unsigned char, unsigned char>.exit"

ST_74: stg_430 [1/1] 0.00ns
conv<1u, 3u, 2u, 26u, unsigned char, unsigned char>.exit:0  br i1 %compute_2, label %3, label %._crit_edge23


 <State 75>: 0.00ns
ST_75: v_load_1 [1/1] 0.00ns
:0  %v_load_1 = load i8* %v

ST_75: tmp_data_V [1/1] 0.00ns
:1  %tmp_data_V = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 0, i8 %v_load_1, i8 %v_load_1, i8 %v_load_1)

ST_75: stg_433 [1/1] 0.00ns
:2  call void @_ssdm_op_Write.axis.volatile.i32P.i4P.i4P.i1P.i1P.i1P.i1P(i32* %OUTPUT_STREAM_V_data_V, i4* %OUTPUT_STREAM_V_keep_V, i4* %OUTPUT_STREAM_V_strb_V, i1* %OUTPUT_STREAM_V_user_V, i1* %OUTPUT_STREAM_V_last_V, i1* %OUTPUT_STREAM_V_id_V, i1* %OUTPUT_STREAM_V_dest_V, i32 %tmp_data_V, i4 undef, i4 undef, i1 undef, i1 false, i1 undef, i1 undef)

ST_75: stg_434 [1/1] 0.00ns
:3  br label %._crit_edge23


 <State 76>: 0.00ns
ST_76: stg_435 [1/1] 0.00ns
:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 3>: 10.7ns
The critical path consists of the following:
	'phi' operation ('col') with incoming values : ('col', PipeNet/src/cpp/net.cpp:58) (0 ns)
	'icmp' operation ('exitcond4', PipeNet/src/cpp/net.cpp:58) (1.91 ns)
	'select' operation ('col_assign_mid2', PipeNet/src/cpp/net.cpp:58) (1.37 ns)
	'icmp' operation ('tmp_26', PipeNet/src/cpp/net.cpp:58) (1.91 ns)
	'or' operation ('tmp_28', PipeNet/src/cpp/net.cpp:58) (0 ns)
	'or' operation ('tmp_30', PipeNet/src/cpp/net.cpp:58) (0 ns)
	'or' operation ('tmp_32', PipeNet/src/cpp/net.cpp:58) (0 ns)
	'or' operation ('tmp_34', PipeNet/src/cpp/net.cpp:58) (0 ns)
	'or' operation ('tmp_36', PipeNet/src/cpp/net.cpp:58) (1.37 ns)
	'or' operation ('tmp_38', PipeNet/src/cpp/net.cpp:58) (0 ns)
	'or' operation ('tmp_40', PipeNet/src/cpp/net.cpp:58) (0 ns)
	'or' operation ('tmp_42', PipeNet/src/cpp/net.cpp:58) (1.37 ns)
	blocking operation 2.74 ns on control path)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
