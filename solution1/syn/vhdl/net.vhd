-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity net is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    INPUT_STREAM_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    INPUT_STREAM_TVALID : IN STD_LOGIC;
    INPUT_STREAM_TREADY : OUT STD_LOGIC;
    INPUT_STREAM_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    INPUT_STREAM_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    INPUT_STREAM_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    INPUT_STREAM_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    INPUT_STREAM_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    INPUT_STREAM_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    OUTPUT_STREAM_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUTPUT_STREAM_TVALID : OUT STD_LOGIC;
    OUTPUT_STREAM_TREADY : IN STD_LOGIC;
    OUTPUT_STREAM_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    OUTPUT_STREAM_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    OUTPUT_STREAM_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUTPUT_STREAM_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUTPUT_STREAM_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUTPUT_STREAM_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of net is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "net,hls_ip_2016_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.664500,HLS_SYN_LAT=29162,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=3508,HLS_SYN_LUT=3892}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000000010";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000000100";
    constant ap_ST_pp0_stg1_fsm_3 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000001000";
    constant ap_ST_pp0_stg2_fsm_4 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000010000";
    constant ap_ST_pp0_stg3_fsm_5 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000100000";
    constant ap_ST_pp0_stg4_fsm_6 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000001000000";
    constant ap_ST_pp0_stg5_fsm_7 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000010000000";
    constant ap_ST_pp0_stg6_fsm_8 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000100000000";
    constant ap_ST_pp0_stg7_fsm_9 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000001000000000";
    constant ap_ST_pp0_stg8_fsm_10 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000010000000000";
    constant ap_ST_pp0_stg9_fsm_11 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000100000000000";
    constant ap_ST_pp0_stg10_fsm_12 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000001000000000000";
    constant ap_ST_pp0_stg11_fsm_13 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000010000000000000";
    constant ap_ST_pp0_stg12_fsm_14 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000100000000000000";
    constant ap_ST_pp0_stg13_fsm_15 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000001000000000000000";
    constant ap_ST_pp0_stg14_fsm_16 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000010000000000000000";
    constant ap_ST_pp0_stg15_fsm_17 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000100000000000000000";
    constant ap_ST_pp0_stg16_fsm_18 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000001000000000000000000";
    constant ap_ST_pp0_stg17_fsm_19 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000010000000000000000000";
    constant ap_ST_pp0_stg18_fsm_20 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000100000000000000000000";
    constant ap_ST_pp0_stg19_fsm_21 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000001000000000000000000000";
    constant ap_ST_pp0_stg20_fsm_22 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000010000000000000000000000";
    constant ap_ST_pp0_stg21_fsm_23 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000100000000000000000000000";
    constant ap_ST_pp0_stg22_fsm_24 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000001000000000000000000000000";
    constant ap_ST_pp0_stg23_fsm_25 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000010000000000000000000000000";
    constant ap_ST_pp0_stg24_fsm_26 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000100000000000000000000000000";
    constant ap_ST_pp0_stg25_fsm_27 : STD_LOGIC_VECTOR (38 downto 0) := "000000000001000000000000000000000000000";
    constant ap_ST_pp0_stg26_fsm_28 : STD_LOGIC_VECTOR (38 downto 0) := "000000000010000000000000000000000000000";
    constant ap_ST_pp0_stg27_fsm_29 : STD_LOGIC_VECTOR (38 downto 0) := "000000000100000000000000000000000000000";
    constant ap_ST_pp0_stg28_fsm_30 : STD_LOGIC_VECTOR (38 downto 0) := "000000001000000000000000000000000000000";
    constant ap_ST_pp0_stg29_fsm_31 : STD_LOGIC_VECTOR (38 downto 0) := "000000010000000000000000000000000000000";
    constant ap_ST_pp0_stg30_fsm_32 : STD_LOGIC_VECTOR (38 downto 0) := "000000100000000000000000000000000000000";
    constant ap_ST_pp0_stg31_fsm_33 : STD_LOGIC_VECTOR (38 downto 0) := "000001000000000000000000000000000000000";
    constant ap_ST_pp0_stg32_fsm_34 : STD_LOGIC_VECTOR (38 downto 0) := "000010000000000000000000000000000000000";
    constant ap_ST_pp0_stg33_fsm_35 : STD_LOGIC_VECTOR (38 downto 0) := "000100000000000000000000000000000000000";
    constant ap_ST_pp0_stg34_fsm_36 : STD_LOGIC_VECTOR (38 downto 0) := "001000000000000000000000000000000000000";
    constant ap_ST_pp0_stg35_fsm_37 : STD_LOGIC_VECTOR (38 downto 0) := "010000000000000000000000000000000000000";
    constant ap_ST_st76_fsm_38 : STD_LOGIC_VECTOR (38 downto 0) := "100000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv10_310 : STD_LOGIC_VECTOR (9 downto 0) := "1100010000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv8_54 : STD_LOGIC_VECTOR (7 downto 0) := "01010100";
    constant ap_const_lv9_A8 : STD_LOGIC_VECTOR (8 downto 0) := "010101000";
    constant ap_const_lv8_55 : STD_LOGIC_VECTOR (7 downto 0) := "01010101";
    constant ap_const_lv9_A9 : STD_LOGIC_VECTOR (8 downto 0) := "010101001";
    constant ap_const_lv8_56 : STD_LOGIC_VECTOR (7 downto 0) := "01010110";
    constant ap_const_lv9_AA : STD_LOGIC_VECTOR (8 downto 0) := "010101010";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv8_FB : STD_LOGIC_VECTOR (7 downto 0) := "11111011";
    constant ap_const_lv8_1E : STD_LOGIC_VECTOR (7 downto 0) := "00011110";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv9_34 : STD_LOGIC_VECTOR (8 downto 0) := "000110100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv9_68 : STD_LOGIC_VECTOR (8 downto 0) := "001101000";
    constant ap_const_lv9_35 : STD_LOGIC_VECTOR (8 downto 0) := "000110101";
    constant ap_const_lv9_69 : STD_LOGIC_VECTOR (8 downto 0) := "001101001";
    constant ap_const_lv33_1 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000001";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_28 : STD_LOGIC_VECTOR (7 downto 0) := "00101000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_56 : BOOLEAN;
    signal line_buffer_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_ce0 : STD_LOGIC;
    signal line_buffer_we0 : STD_LOGIC;
    signal line_buffer_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_ce1 : STD_LOGIC;
    signal line_buffer_we1 : STD_LOGIC;
    signal line_buffer_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_1_ce0 : STD_LOGIC;
    signal line_buffer_1_we0 : STD_LOGIC;
    signal line_buffer_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_1_ce1 : STD_LOGIC;
    signal line_buffer_1_we1 : STD_LOGIC;
    signal line_buffer_1_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_1_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal OUTPUT_STREAM_TDATA_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_pp0_stg0_fsm_2 : STD_LOGIC;
    signal ap_sig_117 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal compute_2_reg_1727 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_401 : STD_LOGIC_VECTOR (9 downto 0);
    signal row_assign_reg_412 : STD_LOGIC_VECTOR (4 downto 0);
    signal col_assign_reg_423 : STD_LOGIC_VECTOR (4 downto 0);
    signal reg_463 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_pp0_stg2_fsm_4 : STD_LOGIC;
    signal ap_sig_143 : BOOLEAN;
    signal exitcond_flatten_reg_1499 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg4_fsm_6 : STD_LOGIC;
    signal ap_sig_154 : BOOLEAN;
    signal reg_468 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond_flatten_fu_496_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_OUTPUT_STREAM_TREADY : STD_LOGIC;
    signal indvar_flatten_next_fu_502_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_flatten_next_reg_1503 : STD_LOGIC_VECTOR (9 downto 0);
    signal col_assign_mid2_fu_520_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal col_assign_mid2_reg_1508 : STD_LOGIC_VECTOR (4 downto 0);
    signal row_assign_mid2_fu_554_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal row_assign_mid2_reg_1515 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_1_fu_580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal compute_1_reg_1520 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_reg_1526 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_42_reg_1526_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_fu_796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_reg_1530 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_61_reg_1530_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_79_fu_913_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_79_reg_1539 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_79_reg_1539_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_98_fu_1027_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_98_reg_1543 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_98_reg_1543_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_1047_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_reg_1547 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_pp0_stg1_fsm_3 : STD_LOGIC;
    signal ap_sig_216 : BOOLEAN;
    signal tmp_7_cast5_fu_1053_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_7_cast5_reg_1554 : STD_LOGIC_VECTOR (8 downto 0);
    signal line_buffer_1_addr_reg_1562 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_1_addr_2_reg_1568 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_fu_1079_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal col_reg_1574 : STD_LOGIC_VECTOR (4 downto 0);
    signal line_buffer_1_addr_3_reg_1579 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_1_addr_5_reg_1584 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_1_addr_6_reg_1589 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_pp0_stg3_fsm_5 : STD_LOGIC;
    signal ap_sig_241 : BOOLEAN;
    signal line_buffer_1_addr_8_reg_1595 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_1_load_2_reg_1601 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_1_load_3_reg_1606 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_101_reg_1611 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_pp0_stg5_fsm_7 : STD_LOGIC;
    signal ap_sig_257 : BOOLEAN;
    signal img_input_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_input_data_stream_0_V_empty_n : STD_LOGIC;
    signal img_input_data_stream_0_V_read : STD_LOGIC;
    signal img_input_data_stream_1_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_input_data_stream_1_V_empty_n : STD_LOGIC;
    signal img_input_data_stream_1_V_read : STD_LOGIC;
    signal img_input_data_stream_2_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_input_data_stream_2_V_empty_n : STD_LOGIC;
    signal img_input_data_stream_2_V_read : STD_LOGIC;
    signal ap_sig_279 : BOOLEAN;
    signal tmp_102_reg_1618 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_103_reg_1626 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_conv_1_1_1_load_reg_1634 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_pp0_stg7_fsm_9 : STD_LOGIC;
    signal ap_sig_295 : BOOLEAN;
    signal tmp_33_1_1_2_2_i_fu_1172_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_1_1_2_2_i_reg_1639 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp4_fu_1181_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp4_reg_1644 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_conv_1_0_fu_1221_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_conv_1_0_reg_1649 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_pp0_stg8_fsm_10 : STD_LOGIC;
    signal ap_sig_313 : BOOLEAN;
    signal ap_reg_ppstg_output_conv_1_0_reg_1649_pp0_iter1 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_conv_1_1_fu_1228_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_conv_1_1_reg_1656 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_output_conv_1_1_reg_1656_pp0_iter1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_1248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1662 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg35_fsm_37 : STD_LOGIC;
    signal ap_sig_329 : BOOLEAN;
    signal col_c2_1_load_1_reg_1671 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_cast_fu_1281_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_17_cast_reg_1678 : STD_LOGIC_VECTOR (8 downto 0);
    signal line_buffer_addr_reg_1685 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_i1_fu_1300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_i1_reg_1691 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_i1_fu_1305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_i1_reg_1696 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_1310_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_14_reg_1701 : STD_LOGIC_VECTOR (32 downto 0);
    signal line_buffer_addr_2_reg_1706 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_addr_3_reg_1711 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_addr_5_reg_1717 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_load_2_reg_1722 : STD_LOGIC_VECTOR (7 downto 0);
    signal compute_2_fu_1396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_378 : BOOLEAN;
    signal grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_ap_done : STD_LOGIC;
    signal grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_ap_start : STD_LOGIC;
    signal grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_ap_idle : STD_LOGIC;
    signal grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_ap_ready : STD_LOGIC;
    signal grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_AXI_video_strm_TREADY : STD_LOGIC;
    signal grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_img_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_img_data_stream_0_V_write : STD_LOGIC;
    signal grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_img_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_img_data_stream_1_V_write : STD_LOGIC;
    signal grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_img_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_img_data_stream_2_V_write : STD_LOGIC;
    signal indvar_flatten_phi_fu_405_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal row_assign_phi_fu_416_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal col_assign_phi_fu_427_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_ap_start : STD_LOGIC := '0';
    signal img_input_data_stream_0_V_full_n : STD_LOGIC;
    signal img_input_data_stream_0_V_write : STD_LOGIC;
    signal img_input_data_stream_1_V_full_n : STD_LOGIC;
    signal img_input_data_stream_1_V_write : STD_LOGIC;
    signal img_input_data_stream_2_V_full_n : STD_LOGIC;
    signal img_input_data_stream_2_V_write : STD_LOGIC;
    signal tmp_8_cast_fu_1063_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_cast_fu_1074_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_cast_fu_1089_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_cast_fu_1099_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_cast_fu_1109_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_cast_fu_1119_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_cast_fu_1124_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_cast_fu_1133_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_cast_fu_1146_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_cast_fu_1295_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_1317_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_cast_fu_1327_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_cast_fu_1337_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_cast_fu_1347_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_fu_1357_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal output_conv_1_0_1_fu_186 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_conv_1_1_1_fu_190 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_c2_1_fu_194 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1268_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_pp0_stg34_fsm_36 : STD_LOGIC;
    signal ap_sig_490 : BOOLEAN;
    signal v_fu_198 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_43_1_i_fu_1423_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_c2_1_fu_202 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_811_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ioackin_OUTPUT_STREAM_TREADY : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_pp0_stg6_fsm_8 : STD_LOGIC;
    signal ap_sig_550 : BOOLEAN;
    signal tmp_5_i_fu_484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_fu_478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_fu_508_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_5_i_mid1_fu_534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_mid1_fu_528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_mid1_fu_540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_fu_490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_i_fu_562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_i_fu_568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_mid2_fu_546_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_592_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_610_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_622_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_640_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_694_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_706_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_700_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_712_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_730_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_fu_724_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_742_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_fu_736_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_fu_754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_fu_766_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_fu_778_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_fu_790_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_fu_784_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_811_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_811_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_64_fu_823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_fu_817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_fu_835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_fu_829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_fu_847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_fu_841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_70_fu_859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_69_fu_853_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_fu_871_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_71_fu_865_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_fu_883_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_73_fu_877_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_76_fu_895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_75_fu_889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_78_fu_907_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_fu_901_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_fu_925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_fu_919_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_83_fu_937_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_fu_931_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_85_fu_949_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_fu_943_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_87_fu_961_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_86_fu_955_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_89_fu_973_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_88_fu_967_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_91_fu_985_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_90_fu_979_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_93_fu_997_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_92_fu_991_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_95_fu_1009_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_94_fu_1003_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_97_fu_1021_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_96_fu_1015_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_1036_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl_cast_fu_1043_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i1_cast_fu_1033_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_1057_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_1068_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_fu_1084_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_1094_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_11_fu_1104_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_1114_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1_fu_1128_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_12_fu_1141_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_33_0_1_0_i_fu_1151_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_0_1_2_2_i_fu_1156_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_0_1_i_fu_1161_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_1_1_0_i_fu_1167_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp5_fu_1177_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp6_fu_1194_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_1_1_i_fu_1189_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_2_1_0_i_fu_1205_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_2_1_2_2_i_fu_1210_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_2_i_fu_1200_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_2_1_i_fu_1215_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_62_fu_1244_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1268_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1268_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_99_fu_1277_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_1289_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_17_fu_1322_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_18_fu_1332_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_21_fu_1342_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_19_fu_1352_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_5_i1_fu_1380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i2_fu_1374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp8_fu_1390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp7_fu_1386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp9_fu_1402_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_100_fu_1412_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp12_fu_1417_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp10_fu_1407_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_811_ce : STD_LOGIC;
    signal ap_sig_cseq_ST_pp0_stg9_fsm_11 : STD_LOGIC;
    signal ap_sig_1119 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg10_fsm_12 : STD_LOGIC;
    signal ap_sig_1127 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg11_fsm_13 : STD_LOGIC;
    signal ap_sig_1135 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg12_fsm_14 : STD_LOGIC;
    signal ap_sig_1143 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg13_fsm_15 : STD_LOGIC;
    signal ap_sig_1151 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg14_fsm_16 : STD_LOGIC;
    signal ap_sig_1159 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg15_fsm_17 : STD_LOGIC;
    signal ap_sig_1167 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg16_fsm_18 : STD_LOGIC;
    signal ap_sig_1175 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg17_fsm_19 : STD_LOGIC;
    signal ap_sig_1183 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg18_fsm_20 : STD_LOGIC;
    signal ap_sig_1191 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg19_fsm_21 : STD_LOGIC;
    signal ap_sig_1199 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg20_fsm_22 : STD_LOGIC;
    signal ap_sig_1207 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg21_fsm_23 : STD_LOGIC;
    signal ap_sig_1214 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg22_fsm_24 : STD_LOGIC;
    signal ap_sig_1222 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg23_fsm_25 : STD_LOGIC;
    signal ap_sig_1230 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg24_fsm_26 : STD_LOGIC;
    signal ap_sig_1237 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg25_fsm_27 : STD_LOGIC;
    signal ap_sig_1245 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg26_fsm_28 : STD_LOGIC;
    signal ap_sig_1253 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg27_fsm_29 : STD_LOGIC;
    signal ap_sig_1261 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg28_fsm_30 : STD_LOGIC;
    signal ap_sig_1269 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg29_fsm_31 : STD_LOGIC;
    signal ap_sig_1277 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg30_fsm_32 : STD_LOGIC;
    signal ap_sig_1285 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg31_fsm_33 : STD_LOGIC;
    signal ap_sig_1293 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg32_fsm_34 : STD_LOGIC;
    signal ap_sig_1301 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg33_fsm_35 : STD_LOGIC;
    signal ap_sig_1309 : BOOLEAN;
    signal grp_fu_1268_ce : STD_LOGIC;
    signal ap_sig_cseq_ST_st76_fsm_38 : STD_LOGIC;
    signal ap_sig_1466 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (38 downto 0);

    component net_AXIvideo2Mat_32_28_28_4096_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        AXI_video_strm_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        AXI_video_strm_TVALID : IN STD_LOGIC;
        AXI_video_strm_TREADY : OUT STD_LOGIC;
        AXI_video_strm_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        AXI_video_strm_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        AXI_video_strm_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        AXI_video_strm_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        AXI_video_strm_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        AXI_video_strm_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        img_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_0_V_full_n : IN STD_LOGIC;
        img_data_stream_0_V_write : OUT STD_LOGIC;
        img_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_1_V_full_n : IN STD_LOGIC;
        img_data_stream_1_V_write : OUT STD_LOGIC;
        img_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_2_V_full_n : IN STD_LOGIC;
        img_data_stream_2_V_write : OUT STD_LOGIC );
    end component;


    component net_srem_32ns_6ns_6_36 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component net_srem_32ns_6ns_32_36 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component net_line_buffer IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component net_line_buffer_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component FIFO_net_img_input_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_net_img_input_data_stream_1_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_net_img_input_data_stream_2_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    line_buffer_U : component net_line_buffer
    generic map (
        DataWidth => 8,
        AddressRange => 156,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_address0,
        ce0 => line_buffer_ce0,
        we0 => line_buffer_we0,
        d0 => line_buffer_d0,
        q0 => line_buffer_q0,
        address1 => line_buffer_address1,
        ce1 => line_buffer_ce1,
        we1 => line_buffer_we1,
        d1 => line_buffer_d1,
        q1 => line_buffer_q1);

    line_buffer_1_U : component net_line_buffer_1
    generic map (
        DataWidth => 8,
        AddressRange => 252,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_1_address0,
        ce0 => line_buffer_1_ce0,
        we0 => line_buffer_1_we0,
        d0 => line_buffer_1_d0,
        q0 => line_buffer_1_q0,
        address1 => line_buffer_1_address1,
        ce1 => line_buffer_1_ce1,
        we1 => line_buffer_1_we1,
        d1 => line_buffer_1_d1,
        q1 => line_buffer_1_q1);

    grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434 : component net_AXIvideo2Mat_32_28_28_4096_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_ap_start,
        ap_done => grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_ap_done,
        ap_idle => grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_ap_idle,
        ap_ready => grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_ap_ready,
        AXI_video_strm_TDATA => INPUT_STREAM_TDATA,
        AXI_video_strm_TVALID => INPUT_STREAM_TVALID,
        AXI_video_strm_TREADY => grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_AXI_video_strm_TREADY,
        AXI_video_strm_TKEEP => INPUT_STREAM_TKEEP,
        AXI_video_strm_TSTRB => INPUT_STREAM_TSTRB,
        AXI_video_strm_TUSER => INPUT_STREAM_TUSER,
        AXI_video_strm_TLAST => INPUT_STREAM_TLAST,
        AXI_video_strm_TID => INPUT_STREAM_TID,
        AXI_video_strm_TDEST => INPUT_STREAM_TDEST,
        img_data_stream_0_V_din => grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_img_data_stream_0_V_din,
        img_data_stream_0_V_full_n => img_input_data_stream_0_V_full_n,
        img_data_stream_0_V_write => grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_img_data_stream_0_V_write,
        img_data_stream_1_V_din => grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_img_data_stream_1_V_din,
        img_data_stream_1_V_full_n => img_input_data_stream_1_V_full_n,
        img_data_stream_1_V_write => grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_img_data_stream_1_V_write,
        img_data_stream_2_V_din => grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_img_data_stream_2_V_din,
        img_data_stream_2_V_full_n => img_input_data_stream_2_V_full_n,
        img_data_stream_2_V_write => grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_img_data_stream_2_V_write);

    net_srem_32ns_6ns_6_36_U11 : component net_srem_32ns_6ns_6_36
    generic map (
        ID => 1,
        NUM_STAGE => 36,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_811_p0,
        din1 => grp_fu_811_p1,
        ce => grp_fu_811_ce,
        dout => grp_fu_811_p2);

    net_srem_32ns_6ns_32_36_U12 : component net_srem_32ns_6ns_32_36
    generic map (
        ID => 1,
        NUM_STAGE => 36,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1268_p0,
        din1 => grp_fu_1268_p1,
        ce => grp_fu_1268_ce,
        dout => grp_fu_1268_p2);

    img_input_data_stream_0_V_img_input_data_stream_0_V_fifo_U : component FIFO_net_img_input_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_img_data_stream_0_V_din,
        if_full_n => img_input_data_stream_0_V_full_n,
        if_write => img_input_data_stream_0_V_write,
        if_dout => img_input_data_stream_0_V_dout,
        if_empty_n => img_input_data_stream_0_V_empty_n,
        if_read => img_input_data_stream_0_V_read);

    img_input_data_stream_1_V_img_input_data_stream_1_V_fifo_U : component FIFO_net_img_input_data_stream_1_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_img_data_stream_1_V_din,
        if_full_n => img_input_data_stream_1_V_full_n,
        if_write => img_input_data_stream_1_V_write,
        if_dout => img_input_data_stream_1_V_dout,
        if_empty_n => img_input_data_stream_1_V_empty_n,
        if_read => img_input_data_stream_1_V_read);

    img_input_data_stream_2_V_img_input_data_stream_2_V_fifo_U : component FIFO_net_img_input_data_stream_2_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_img_data_stream_2_V_din,
        if_full_n => img_input_data_stream_2_V_full_n,
        if_write => img_input_data_stream_2_V_write,
        if_dout => img_input_data_stream_2_V_dout,
        if_empty_n => img_input_data_stream_2_V_empty_n,
        if_read => img_input_data_stream_2_V_read);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                    ap_reg_grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_ap_ready)) then 
                    ap_reg_grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_OUTPUT_STREAM_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_OUTPUT_STREAM_TREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((compute_2_reg_1727 = ap_const_lv1_0)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((compute_2_reg_1727 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY)))))) then 
                    ap_reg_ioackin_OUTPUT_STREAM_TREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((compute_2_reg_1727 = ap_const_lv1_0)) and (ap_const_logic_1 = OUTPUT_STREAM_TREADY)))) then 
                    ap_reg_ioackin_OUTPUT_STREAM_TREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((compute_2_reg_1727 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))) and not((ap_const_lv1_0 = exitcond_flatten_fu_496_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_logic_0 = grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_ap_done)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_0 = exitcond_flatten_reg_1499) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg35_fsm_37))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_logic_0 = grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_ap_done))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg35_fsm_37) and not((ap_const_lv1_0 = exitcond_flatten_reg_1499))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg35_fsm_37)) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_logic_0 = grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_ap_done)))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    col_assign_reg_423_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond_flatten_reg_1499) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((compute_2_reg_1727 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))))) then 
                col_assign_reg_423 <= col_reg_1574;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_logic_0 = grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_ap_done)))) then 
                col_assign_reg_423 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    col_c2_1_fu_202_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_flatten_reg_1499) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg35_fsm_37) and (ap_const_lv1_0 = tmp_42_reg_1526) and (ap_const_lv1_0 = tmp_61_reg_1530) and (ap_const_lv1_0 = tmp_5_fu_1248_p2))) then 
                col_c2_1_fu_202 <= std_logic_vector(resize(unsigned(grp_fu_811_p2),32));
            elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_flatten_reg_1499) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg35_fsm_37) and (ap_const_lv1_0 = tmp_42_reg_1526) and (ap_const_lv1_0 = tmp_61_reg_1530) and not((ap_const_lv1_0 = tmp_5_fu_1248_p2))))) then 
                col_c2_1_fu_202 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_401_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond_flatten_reg_1499) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((compute_2_reg_1727 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))))) then 
                indvar_flatten_reg_401 <= indvar_flatten_next_reg_1503;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_logic_0 = grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_ap_done)))) then 
                indvar_flatten_reg_401 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    row_assign_reg_412_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond_flatten_reg_1499) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((compute_2_reg_1727 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))))) then 
                row_assign_reg_412 <= row_assign_mid2_reg_1515;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_logic_0 = grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_ap_done)))) then 
                row_assign_reg_412 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    row_c2_1_fu_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg34_fsm_36) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_42_reg_1526_pp0_iter1) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_61_reg_1530_pp0_iter1) and not((ap_const_lv1_0 = tmp_5_reg_1662)))) then 
                row_c2_1_fu_194 <= grp_fu_1268_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                row_c2_1_fu_194 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg8_fsm_10)) then
                ap_reg_ppstg_output_conv_1_0_reg_1649_pp0_iter1 <= output_conv_1_0_reg_1649;
                ap_reg_ppstg_output_conv_1_1_reg_1656_pp0_iter1 <= output_conv_1_1_reg_1656;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((compute_2_reg_1727 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))))) then
                ap_reg_ppstg_tmp_42_reg_1526_pp0_iter1 <= tmp_42_reg_1526;
                ap_reg_ppstg_tmp_61_reg_1530_pp0_iter1 <= tmp_61_reg_1530;
                ap_reg_ppstg_tmp_79_reg_1539_pp0_iter1 <= tmp_79_reg_1539;
                ap_reg_ppstg_tmp_98_reg_1543_pp0_iter1 <= tmp_98_reg_1543;
                col_c2_1_load_1_reg_1671 <= col_c2_1_fu_202;
                exitcond_flatten_reg_1499 <= exitcond_flatten_fu_496_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((compute_2_reg_1727 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))) and (ap_const_lv1_0 = exitcond_flatten_fu_496_p2))) then
                col_assign_mid2_reg_1508 <= col_assign_mid2_fu_520_p3;
                compute_1_reg_1520 <= compute_1_fu_580_p2;
                tmp_42_reg_1526 <= tmp_42_fu_682_p2;
                tmp_79_reg_1539 <= tmp_79_fu_913_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_flatten_reg_1499) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3))) then
                col_reg_1574 <= col_fu_1079_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg35_fsm_37)) then
                compute_2_reg_1727 <= compute_2_fu_1396_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((compute_2_reg_1727 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))))) then
                indvar_flatten_next_reg_1503 <= indvar_flatten_next_fu_502_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_reg_1499) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3))) then
                line_buffer_1_addr_2_reg_1568 <= tmp_9_cast_fu_1074_p1(8 - 1 downto 0);
                line_buffer_1_addr_reg_1562 <= tmp_8_cast_fu_1063_p1(8 - 1 downto 0);
                tmp_7_cast5_reg_1554 <= tmp_7_cast5_fu_1053_p1;
                tmp_7_reg_1547 <= tmp_7_fu_1047_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4) and (ap_const_lv1_0 = exitcond_flatten_reg_1499))) then
                line_buffer_1_addr_3_reg_1579 <= tmp_10_cast_fu_1089_p1(8 - 1 downto 0);
                line_buffer_1_addr_5_reg_1584 <= tmp_12_cast_fu_1099_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_reg_1499) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_5))) then
                line_buffer_1_addr_6_reg_1589 <= tmp_13_cast_fu_1109_p1(8 - 1 downto 0);
                line_buffer_1_addr_8_reg_1595 <= tmp_15_cast_fu_1119_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_flatten_reg_1499) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_5))) then
                line_buffer_1_load_2_reg_1601 <= line_buffer_1_q0;
                line_buffer_1_load_3_reg_1606 <= line_buffer_1_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_79_reg_1539_pp0_iter1) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_98_reg_1543_pp0_iter1))) then
                    line_buffer_addr_2_reg_1706(7 downto 1) <= tmp_19_cast_fu_1327_p1(8 - 1 downto 0)(7 downto 1);
                    line_buffer_addr_3_reg_1711(7 downto 1) <= tmp_20_cast_fu_1337_p1(8 - 1 downto 0)(7 downto 1);
                    line_buffer_addr_5_reg_1717(7 downto 1) <= tmp_23_cast_fu_1347_p1(8 - 1 downto 0)(7 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((compute_2_reg_1727 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))) and (ap_const_lv1_0 = tmp_79_reg_1539) and (ap_const_lv1_0 = tmp_98_reg_1543))) then
                    line_buffer_addr_reg_1685(7 downto 1) <= tmp_18_cast_fu_1295_p1(8 - 1 downto 0)(7 downto 1);
                    tmp_17_cast_reg_1678(8 downto 1) <= tmp_17_cast_fu_1281_p3(8 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_5) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_79_reg_1539_pp0_iter1) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_98_reg_1543_pp0_iter1))) then
                line_buffer_load_2_reg_1722 <= line_buffer_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_flatten_reg_1499) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg8_fsm_10))) then
                output_conv_1_0_1_fu_186 <= output_conv_1_0_fu_1221_p3;
                output_conv_1_1_1_fu_190 <= output_conv_1_1_fu_1228_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_reg_1499) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg8_fsm_10))) then
                output_conv_1_0_reg_1649 <= output_conv_1_0_fu_1221_p3;
                output_conv_1_1_reg_1656 <= output_conv_1_1_fu_1228_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_reg_1499) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg7_fsm_9))) then
                output_conv_1_1_1_load_reg_1634 <= output_conv_1_1_1_fu_190;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4) and (ap_const_lv1_0 = exitcond_flatten_reg_1499)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_flatten_reg_1499) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_6)))) then
                reg_463 <= line_buffer_1_q0;
                reg_468 <= line_buffer_1_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((compute_2_reg_1727 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))) and (ap_const_lv1_0 = exitcond_flatten_fu_496_p2))) then
                row_assign_mid2_reg_1515 <= row_assign_mid2_fu_554_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_reg_1499) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg7_fsm_9) and not((ap_const_lv1_0 = compute_1_reg_1520)))) then
                tmp4_reg_1644 <= tmp4_fu_1181_p2;
                tmp_33_1_1_2_2_i_reg_1639 <= tmp_33_1_1_2_2_i_fu_1172_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_reg_1499) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_7) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_279)))) then
                tmp_101_reg_1611 <= img_input_data_stream_0_V_dout;
                tmp_102_reg_1618 <= img_input_data_stream_1_V_dout;
                tmp_103_reg_1626 <= img_input_data_stream_2_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_79_reg_1539_pp0_iter1) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_98_reg_1543_pp0_iter1))) then
                    tmp_14_reg_1701(32 downto 1) <= tmp_14_fu_1310_p3(32 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_reg_1499) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg35_fsm_37) and (ap_const_lv1_0 = tmp_42_reg_1526) and (ap_const_lv1_0 = tmp_61_reg_1530))) then
                tmp_5_reg_1662 <= tmp_5_fu_1248_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((compute_2_reg_1727 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))) and (ap_const_lv1_0 = exitcond_flatten_fu_496_p2) and (ap_const_lv1_0 = tmp_42_fu_682_p2))) then
                tmp_61_reg_1530 <= tmp_61_fu_796_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3)) then
                tmp_6_i1_reg_1691 <= tmp_6_i1_fu_1300_p2;
                tmp_8_i1_reg_1696 <= tmp_8_i1_fu_1305_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((compute_2_reg_1727 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))) and (ap_const_lv1_0 = exitcond_flatten_fu_496_p2) and (ap_const_lv1_0 = tmp_79_fu_913_p2))) then
                tmp_98_reg_1543 <= tmp_98_fu_1027_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg35_fsm_37) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_79_reg_1539_pp0_iter1) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_98_reg_1543_pp0_iter1) and not((ap_const_lv1_0 = compute_2_fu_1396_p2)))) then
                v_fu_198 <= tmp_43_1_i_fu_1423_p2;
            end if;
        end if;
    end process;
    tmp_17_cast_reg_1678(0) <= '0';
    line_buffer_addr_reg_1685(0) <= '0';
    tmp_14_reg_1701(0) <= '0';
    line_buffer_addr_2_reg_1706(0) <= '0';
    line_buffer_addr_3_reg_1711(0) <= '1';
    line_buffer_addr_5_reg_1717(0) <= '1';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, compute_2_reg_1727, exitcond_flatten_fu_496_p2, ap_sig_ioackin_OUTPUT_STREAM_TREADY, ap_sig_279, grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_logic_0 = grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_ap_done))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_pp0_stg0_fsm_2 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((compute_2_reg_1727 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))) and not(((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((compute_2_reg_1727 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((compute_2_reg_1727 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))) and not((ap_const_lv1_0 = exitcond_flatten_fu_496_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg1_fsm_3;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((compute_2_reg_1727 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((compute_2_reg_1727 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))) and not((ap_const_lv1_0 = exitcond_flatten_fu_496_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st76_fsm_38;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_pp0_stg1_fsm_3 => 
                ap_NS_fsm <= ap_ST_pp0_stg2_fsm_4;
            when ap_ST_pp0_stg2_fsm_4 => 
                ap_NS_fsm <= ap_ST_pp0_stg3_fsm_5;
            when ap_ST_pp0_stg3_fsm_5 => 
                ap_NS_fsm <= ap_ST_pp0_stg4_fsm_6;
            when ap_ST_pp0_stg4_fsm_6 => 
                ap_NS_fsm <= ap_ST_pp0_stg5_fsm_7;
            when ap_ST_pp0_stg5_fsm_7 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_279))) then
                    ap_NS_fsm <= ap_ST_pp0_stg6_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg5_fsm_7;
                end if;
            when ap_ST_pp0_stg6_fsm_8 => 
                ap_NS_fsm <= ap_ST_pp0_stg7_fsm_9;
            when ap_ST_pp0_stg7_fsm_9 => 
                ap_NS_fsm <= ap_ST_pp0_stg8_fsm_10;
            when ap_ST_pp0_stg8_fsm_10 => 
                ap_NS_fsm <= ap_ST_pp0_stg9_fsm_11;
            when ap_ST_pp0_stg9_fsm_11 => 
                ap_NS_fsm <= ap_ST_pp0_stg10_fsm_12;
            when ap_ST_pp0_stg10_fsm_12 => 
                ap_NS_fsm <= ap_ST_pp0_stg11_fsm_13;
            when ap_ST_pp0_stg11_fsm_13 => 
                ap_NS_fsm <= ap_ST_pp0_stg12_fsm_14;
            when ap_ST_pp0_stg12_fsm_14 => 
                ap_NS_fsm <= ap_ST_pp0_stg13_fsm_15;
            when ap_ST_pp0_stg13_fsm_15 => 
                ap_NS_fsm <= ap_ST_pp0_stg14_fsm_16;
            when ap_ST_pp0_stg14_fsm_16 => 
                ap_NS_fsm <= ap_ST_pp0_stg15_fsm_17;
            when ap_ST_pp0_stg15_fsm_17 => 
                ap_NS_fsm <= ap_ST_pp0_stg16_fsm_18;
            when ap_ST_pp0_stg16_fsm_18 => 
                ap_NS_fsm <= ap_ST_pp0_stg17_fsm_19;
            when ap_ST_pp0_stg17_fsm_19 => 
                ap_NS_fsm <= ap_ST_pp0_stg18_fsm_20;
            when ap_ST_pp0_stg18_fsm_20 => 
                ap_NS_fsm <= ap_ST_pp0_stg19_fsm_21;
            when ap_ST_pp0_stg19_fsm_21 => 
                ap_NS_fsm <= ap_ST_pp0_stg20_fsm_22;
            when ap_ST_pp0_stg20_fsm_22 => 
                ap_NS_fsm <= ap_ST_pp0_stg21_fsm_23;
            when ap_ST_pp0_stg21_fsm_23 => 
                ap_NS_fsm <= ap_ST_pp0_stg22_fsm_24;
            when ap_ST_pp0_stg22_fsm_24 => 
                ap_NS_fsm <= ap_ST_pp0_stg23_fsm_25;
            when ap_ST_pp0_stg23_fsm_25 => 
                ap_NS_fsm <= ap_ST_pp0_stg24_fsm_26;
            when ap_ST_pp0_stg24_fsm_26 => 
                ap_NS_fsm <= ap_ST_pp0_stg25_fsm_27;
            when ap_ST_pp0_stg25_fsm_27 => 
                ap_NS_fsm <= ap_ST_pp0_stg26_fsm_28;
            when ap_ST_pp0_stg26_fsm_28 => 
                ap_NS_fsm <= ap_ST_pp0_stg27_fsm_29;
            when ap_ST_pp0_stg27_fsm_29 => 
                ap_NS_fsm <= ap_ST_pp0_stg28_fsm_30;
            when ap_ST_pp0_stg28_fsm_30 => 
                ap_NS_fsm <= ap_ST_pp0_stg29_fsm_31;
            when ap_ST_pp0_stg29_fsm_31 => 
                ap_NS_fsm <= ap_ST_pp0_stg30_fsm_32;
            when ap_ST_pp0_stg30_fsm_32 => 
                ap_NS_fsm <= ap_ST_pp0_stg31_fsm_33;
            when ap_ST_pp0_stg31_fsm_33 => 
                ap_NS_fsm <= ap_ST_pp0_stg32_fsm_34;
            when ap_ST_pp0_stg32_fsm_34 => 
                ap_NS_fsm <= ap_ST_pp0_stg33_fsm_35;
            when ap_ST_pp0_stg33_fsm_35 => 
                ap_NS_fsm <= ap_ST_pp0_stg34_fsm_36;
            when ap_ST_pp0_stg34_fsm_36 => 
                ap_NS_fsm <= ap_ST_pp0_stg35_fsm_37;
            when ap_ST_pp0_stg35_fsm_37 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
            when ap_ST_st76_fsm_38 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    INPUT_STREAM_TREADY <= grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_AXI_video_strm_TREADY;
    OUTPUT_STREAM_TDATA <= (((ap_const_lv8_0 & v_fu_198) & v_fu_198) & v_fu_198);

    OUTPUT_STREAM_TDATA_blk_n_assign_proc : process(OUTPUT_STREAM_TREADY, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it2, compute_2_reg_1727)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((compute_2_reg_1727 = ap_const_lv1_0)))) then 
            OUTPUT_STREAM_TDATA_blk_n <= OUTPUT_STREAM_TREADY;
        else 
            OUTPUT_STREAM_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    OUTPUT_STREAM_TDEST <= ap_const_lv1_0;
    OUTPUT_STREAM_TID <= ap_const_lv1_0;
    OUTPUT_STREAM_TKEEP <= ap_const_lv4_0;
    OUTPUT_STREAM_TLAST <= ap_const_lv1_0;
    OUTPUT_STREAM_TSTRB <= ap_const_lv4_0;
    OUTPUT_STREAM_TUSER <= ap_const_lv1_0;

    OUTPUT_STREAM_TVALID_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it2, compute_2_reg_1727, ap_reg_ioackin_OUTPUT_STREAM_TREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((compute_2_reg_1727 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_reg_ioackin_OUTPUT_STREAM_TREADY)))) then 
            OUTPUT_STREAM_TVALID <= ap_const_logic_1;
        else 
            OUTPUT_STREAM_TVALID <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_sig_cseq_ST_st76_fsm_38)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st76_fsm_38)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st76_fsm_38)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st76_fsm_38)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_1119_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_1119 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_1127_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_1127 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_1135_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_1135 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_1143_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_1143 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    ap_sig_1151_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_1151 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    ap_sig_1159_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_1159 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    ap_sig_1167_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_1167 <= (ap_const_lv1_1 = ap_CS_fsm(17 downto 17));
    end process;


    ap_sig_117_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_117 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_1175_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_1175 <= (ap_const_lv1_1 = ap_CS_fsm(18 downto 18));
    end process;


    ap_sig_1183_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_1183 <= (ap_const_lv1_1 = ap_CS_fsm(19 downto 19));
    end process;


    ap_sig_1191_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_1191 <= (ap_const_lv1_1 = ap_CS_fsm(20 downto 20));
    end process;


    ap_sig_1199_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_1199 <= (ap_const_lv1_1 = ap_CS_fsm(21 downto 21));
    end process;


    ap_sig_1207_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_1207 <= (ap_const_lv1_1 = ap_CS_fsm(22 downto 22));
    end process;


    ap_sig_1214_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_1214 <= (ap_const_lv1_1 = ap_CS_fsm(23 downto 23));
    end process;


    ap_sig_1222_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_1222 <= (ap_const_lv1_1 = ap_CS_fsm(24 downto 24));
    end process;


    ap_sig_1230_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_1230 <= (ap_const_lv1_1 = ap_CS_fsm(25 downto 25));
    end process;


    ap_sig_1237_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_1237 <= (ap_const_lv1_1 = ap_CS_fsm(26 downto 26));
    end process;


    ap_sig_1245_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_1245 <= (ap_const_lv1_1 = ap_CS_fsm(27 downto 27));
    end process;


    ap_sig_1253_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_1253 <= (ap_const_lv1_1 = ap_CS_fsm(28 downto 28));
    end process;


    ap_sig_1261_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_1261 <= (ap_const_lv1_1 = ap_CS_fsm(29 downto 29));
    end process;


    ap_sig_1269_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_1269 <= (ap_const_lv1_1 = ap_CS_fsm(30 downto 30));
    end process;


    ap_sig_1277_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_1277 <= (ap_const_lv1_1 = ap_CS_fsm(31 downto 31));
    end process;


    ap_sig_1285_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_1285 <= (ap_const_lv1_1 = ap_CS_fsm(32 downto 32));
    end process;


    ap_sig_1293_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_1293 <= (ap_const_lv1_1 = ap_CS_fsm(33 downto 33));
    end process;


    ap_sig_1301_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_1301 <= (ap_const_lv1_1 = ap_CS_fsm(34 downto 34));
    end process;


    ap_sig_1309_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_1309 <= (ap_const_lv1_1 = ap_CS_fsm(35 downto 35));
    end process;


    ap_sig_143_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_143 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_1466_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_1466 <= (ap_const_lv1_1 = ap_CS_fsm(38 downto 38));
    end process;


    ap_sig_154_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_154 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_216_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_216 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_241_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_241 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_257_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_257 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_279_assign_proc : process(exitcond_flatten_reg_1499, img_input_data_stream_0_V_empty_n, img_input_data_stream_1_V_empty_n, img_input_data_stream_2_V_empty_n)
    begin
                ap_sig_279 <= (((ap_const_lv1_0 = exitcond_flatten_reg_1499) and (img_input_data_stream_0_V_empty_n = ap_const_logic_0)) or ((ap_const_lv1_0 = exitcond_flatten_reg_1499) and (img_input_data_stream_1_V_empty_n = ap_const_logic_0)) or ((ap_const_lv1_0 = exitcond_flatten_reg_1499) and (img_input_data_stream_2_V_empty_n = ap_const_logic_0)));
    end process;


    ap_sig_295_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_295 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_313_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_313 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_329_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_329 <= (ap_const_lv1_1 = ap_CS_fsm(37 downto 37));
    end process;


    ap_sig_378_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_378 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_490_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_490 <= (ap_const_lv1_1 = ap_CS_fsm(36 downto 36));
    end process;


    ap_sig_550_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_550 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_56_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_56 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_2_assign_proc : process(ap_sig_117)
    begin
        if (ap_sig_117) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg10_fsm_12_assign_proc : process(ap_sig_1127)
    begin
        if (ap_sig_1127) then 
            ap_sig_cseq_ST_pp0_stg10_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg10_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg11_fsm_13_assign_proc : process(ap_sig_1135)
    begin
        if (ap_sig_1135) then 
            ap_sig_cseq_ST_pp0_stg11_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg11_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg12_fsm_14_assign_proc : process(ap_sig_1143)
    begin
        if (ap_sig_1143) then 
            ap_sig_cseq_ST_pp0_stg12_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg12_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg13_fsm_15_assign_proc : process(ap_sig_1151)
    begin
        if (ap_sig_1151) then 
            ap_sig_cseq_ST_pp0_stg13_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg13_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg14_fsm_16_assign_proc : process(ap_sig_1159)
    begin
        if (ap_sig_1159) then 
            ap_sig_cseq_ST_pp0_stg14_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg14_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg15_fsm_17_assign_proc : process(ap_sig_1167)
    begin
        if (ap_sig_1167) then 
            ap_sig_cseq_ST_pp0_stg15_fsm_17 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg15_fsm_17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg16_fsm_18_assign_proc : process(ap_sig_1175)
    begin
        if (ap_sig_1175) then 
            ap_sig_cseq_ST_pp0_stg16_fsm_18 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg16_fsm_18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg17_fsm_19_assign_proc : process(ap_sig_1183)
    begin
        if (ap_sig_1183) then 
            ap_sig_cseq_ST_pp0_stg17_fsm_19 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg17_fsm_19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg18_fsm_20_assign_proc : process(ap_sig_1191)
    begin
        if (ap_sig_1191) then 
            ap_sig_cseq_ST_pp0_stg18_fsm_20 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg18_fsm_20 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg19_fsm_21_assign_proc : process(ap_sig_1199)
    begin
        if (ap_sig_1199) then 
            ap_sig_cseq_ST_pp0_stg19_fsm_21 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg19_fsm_21 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg1_fsm_3_assign_proc : process(ap_sig_216)
    begin
        if (ap_sig_216) then 
            ap_sig_cseq_ST_pp0_stg1_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg1_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg20_fsm_22_assign_proc : process(ap_sig_1207)
    begin
        if (ap_sig_1207) then 
            ap_sig_cseq_ST_pp0_stg20_fsm_22 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg20_fsm_22 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg21_fsm_23_assign_proc : process(ap_sig_1214)
    begin
        if (ap_sig_1214) then 
            ap_sig_cseq_ST_pp0_stg21_fsm_23 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg21_fsm_23 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg22_fsm_24_assign_proc : process(ap_sig_1222)
    begin
        if (ap_sig_1222) then 
            ap_sig_cseq_ST_pp0_stg22_fsm_24 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg22_fsm_24 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg23_fsm_25_assign_proc : process(ap_sig_1230)
    begin
        if (ap_sig_1230) then 
            ap_sig_cseq_ST_pp0_stg23_fsm_25 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg23_fsm_25 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg24_fsm_26_assign_proc : process(ap_sig_1237)
    begin
        if (ap_sig_1237) then 
            ap_sig_cseq_ST_pp0_stg24_fsm_26 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg24_fsm_26 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg25_fsm_27_assign_proc : process(ap_sig_1245)
    begin
        if (ap_sig_1245) then 
            ap_sig_cseq_ST_pp0_stg25_fsm_27 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg25_fsm_27 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg26_fsm_28_assign_proc : process(ap_sig_1253)
    begin
        if (ap_sig_1253) then 
            ap_sig_cseq_ST_pp0_stg26_fsm_28 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg26_fsm_28 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg27_fsm_29_assign_proc : process(ap_sig_1261)
    begin
        if (ap_sig_1261) then 
            ap_sig_cseq_ST_pp0_stg27_fsm_29 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg27_fsm_29 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg28_fsm_30_assign_proc : process(ap_sig_1269)
    begin
        if (ap_sig_1269) then 
            ap_sig_cseq_ST_pp0_stg28_fsm_30 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg28_fsm_30 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg29_fsm_31_assign_proc : process(ap_sig_1277)
    begin
        if (ap_sig_1277) then 
            ap_sig_cseq_ST_pp0_stg29_fsm_31 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg29_fsm_31 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg2_fsm_4_assign_proc : process(ap_sig_143)
    begin
        if (ap_sig_143) then 
            ap_sig_cseq_ST_pp0_stg2_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg2_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg30_fsm_32_assign_proc : process(ap_sig_1285)
    begin
        if (ap_sig_1285) then 
            ap_sig_cseq_ST_pp0_stg30_fsm_32 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg30_fsm_32 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg31_fsm_33_assign_proc : process(ap_sig_1293)
    begin
        if (ap_sig_1293) then 
            ap_sig_cseq_ST_pp0_stg31_fsm_33 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg31_fsm_33 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg32_fsm_34_assign_proc : process(ap_sig_1301)
    begin
        if (ap_sig_1301) then 
            ap_sig_cseq_ST_pp0_stg32_fsm_34 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg32_fsm_34 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg33_fsm_35_assign_proc : process(ap_sig_1309)
    begin
        if (ap_sig_1309) then 
            ap_sig_cseq_ST_pp0_stg33_fsm_35 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg33_fsm_35 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg34_fsm_36_assign_proc : process(ap_sig_490)
    begin
        if (ap_sig_490) then 
            ap_sig_cseq_ST_pp0_stg34_fsm_36 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg34_fsm_36 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg35_fsm_37_assign_proc : process(ap_sig_329)
    begin
        if (ap_sig_329) then 
            ap_sig_cseq_ST_pp0_stg35_fsm_37 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg35_fsm_37 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg3_fsm_5_assign_proc : process(ap_sig_241)
    begin
        if (ap_sig_241) then 
            ap_sig_cseq_ST_pp0_stg3_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg3_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg4_fsm_6_assign_proc : process(ap_sig_154)
    begin
        if (ap_sig_154) then 
            ap_sig_cseq_ST_pp0_stg4_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg4_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg5_fsm_7_assign_proc : process(ap_sig_257)
    begin
        if (ap_sig_257) then 
            ap_sig_cseq_ST_pp0_stg5_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg5_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg6_fsm_8_assign_proc : process(ap_sig_550)
    begin
        if (ap_sig_550) then 
            ap_sig_cseq_ST_pp0_stg6_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg6_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg7_fsm_9_assign_proc : process(ap_sig_295)
    begin
        if (ap_sig_295) then 
            ap_sig_cseq_ST_pp0_stg7_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg7_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg8_fsm_10_assign_proc : process(ap_sig_313)
    begin
        if (ap_sig_313) then 
            ap_sig_cseq_ST_pp0_stg8_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg8_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg9_fsm_11_assign_proc : process(ap_sig_1119)
    begin
        if (ap_sig_1119) then 
            ap_sig_cseq_ST_pp0_stg9_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg9_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_56)
    begin
        if (ap_sig_56) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_378)
    begin
        if (ap_sig_378) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st76_fsm_38_assign_proc : process(ap_sig_1466)
    begin
        if (ap_sig_1466) then 
            ap_sig_cseq_ST_st76_fsm_38 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st76_fsm_38 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_ioackin_OUTPUT_STREAM_TREADY_assign_proc : process(OUTPUT_STREAM_TREADY, ap_reg_ioackin_OUTPUT_STREAM_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_OUTPUT_STREAM_TREADY)) then 
            ap_sig_ioackin_OUTPUT_STREAM_TREADY <= OUTPUT_STREAM_TREADY;
        else 
            ap_sig_ioackin_OUTPUT_STREAM_TREADY <= ap_const_logic_1;
        end if; 
    end process;

    col_assign_mid2_fu_520_p3 <= 
        ap_const_lv5_0 when (exitcond4_fu_514_p2(0) = '1') else 
        col_assign_phi_fu_427_p4;

    col_assign_phi_fu_427_p4_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, col_assign_reg_423, exitcond_flatten_reg_1499, col_reg_1574)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond_flatten_reg_1499))) then 
            col_assign_phi_fu_427_p4 <= col_reg_1574;
        else 
            col_assign_phi_fu_427_p4 <= col_assign_reg_423;
        end if; 
    end process;

    col_fu_1079_p2 <= std_logic_vector(unsigned(col_assign_mid2_reg_1508) + unsigned(ap_const_lv5_1));
    compute_1_fu_580_p2 <= (tmp3_mid2_fu_546_p3 and tmp2_fu_574_p2);
    compute_2_fu_1396_p2 <= (tmp8_fu_1390_p2 and tmp7_fu_1386_p2);
    exitcond4_fu_514_p2 <= "1" when (col_assign_phi_fu_427_p4 = ap_const_lv5_1C) else "0";
    exitcond_flatten_fu_496_p2 <= "1" when (indvar_flatten_phi_fu_405_p4 = ap_const_lv10_310) else "0";

    grp_fu_1268_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp0_it0, compute_2_reg_1727, ap_sig_cseq_ST_pp0_stg2_fsm_4, ap_sig_cseq_ST_pp0_stg4_fsm_6, ap_sig_ioackin_OUTPUT_STREAM_TREADY, ap_sig_cseq_ST_pp0_stg1_fsm_3, ap_sig_cseq_ST_pp0_stg3_fsm_5, ap_sig_cseq_ST_pp0_stg5_fsm_7, ap_sig_279, ap_sig_cseq_ST_pp0_stg7_fsm_9, ap_sig_cseq_ST_pp0_stg8_fsm_10, ap_sig_cseq_ST_pp0_stg35_fsm_37, ap_sig_cseq_ST_pp0_stg34_fsm_36, ap_sig_cseq_ST_pp0_stg6_fsm_8, ap_sig_cseq_ST_pp0_stg9_fsm_11, ap_sig_cseq_ST_pp0_stg10_fsm_12, ap_sig_cseq_ST_pp0_stg11_fsm_13, ap_sig_cseq_ST_pp0_stg12_fsm_14, ap_sig_cseq_ST_pp0_stg13_fsm_15, ap_sig_cseq_ST_pp0_stg14_fsm_16, ap_sig_cseq_ST_pp0_stg15_fsm_17, ap_sig_cseq_ST_pp0_stg16_fsm_18, ap_sig_cseq_ST_pp0_stg17_fsm_19, ap_sig_cseq_ST_pp0_stg18_fsm_20, ap_sig_cseq_ST_pp0_stg19_fsm_21, ap_sig_cseq_ST_pp0_stg20_fsm_22, ap_sig_cseq_ST_pp0_stg21_fsm_23, ap_sig_cseq_ST_pp0_stg22_fsm_24, ap_sig_cseq_ST_pp0_stg23_fsm_25, ap_sig_cseq_ST_pp0_stg24_fsm_26, ap_sig_cseq_ST_pp0_stg25_fsm_27, ap_sig_cseq_ST_pp0_stg26_fsm_28, ap_sig_cseq_ST_pp0_stg27_fsm_29, ap_sig_cseq_ST_pp0_stg28_fsm_30, ap_sig_cseq_ST_pp0_stg29_fsm_31, ap_sig_cseq_ST_pp0_stg30_fsm_32, ap_sig_cseq_ST_pp0_stg31_fsm_33, ap_sig_cseq_ST_pp0_stg32_fsm_34, ap_sig_cseq_ST_pp0_stg33_fsm_35)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((compute_2_reg_1727 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY)))) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_5) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_7) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_279))) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg7_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg8_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg35_fsm_37) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg34_fsm_36) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg6_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg9_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg10_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg11_fsm_13) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg12_fsm_14) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg13_fsm_15) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg14_fsm_16) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg15_fsm_17) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg16_fsm_18) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg17_fsm_19) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg18_fsm_20) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg19_fsm_21) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg20_fsm_22) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg21_fsm_23) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg22_fsm_24) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg23_fsm_25) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg24_fsm_26) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg25_fsm_27) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg26_fsm_28) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg27_fsm_29) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg28_fsm_30) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg29_fsm_31) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg30_fsm_32) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg31_fsm_33) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg32_fsm_34) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg33_fsm_35))) then 
            grp_fu_1268_ce <= ap_const_logic_1;
        else 
            grp_fu_1268_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1268_p0 <= std_logic_vector(unsigned(row_c2_1_fu_194) + unsigned(ap_const_lv32_1));
    grp_fu_1268_p1 <= ap_const_lv32_1A(6 - 1 downto 0);

    grp_fu_811_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp0_it0, compute_2_reg_1727, ap_sig_cseq_ST_pp0_stg2_fsm_4, ap_sig_cseq_ST_pp0_stg4_fsm_6, ap_sig_ioackin_OUTPUT_STREAM_TREADY, ap_sig_cseq_ST_pp0_stg1_fsm_3, ap_sig_cseq_ST_pp0_stg3_fsm_5, ap_sig_cseq_ST_pp0_stg5_fsm_7, ap_sig_279, ap_sig_cseq_ST_pp0_stg7_fsm_9, ap_sig_cseq_ST_pp0_stg8_fsm_10, ap_sig_cseq_ST_pp0_stg35_fsm_37, ap_sig_cseq_ST_pp0_stg34_fsm_36, ap_sig_cseq_ST_pp0_stg6_fsm_8, ap_sig_cseq_ST_pp0_stg9_fsm_11, ap_sig_cseq_ST_pp0_stg10_fsm_12, ap_sig_cseq_ST_pp0_stg11_fsm_13, ap_sig_cseq_ST_pp0_stg12_fsm_14, ap_sig_cseq_ST_pp0_stg13_fsm_15, ap_sig_cseq_ST_pp0_stg14_fsm_16, ap_sig_cseq_ST_pp0_stg15_fsm_17, ap_sig_cseq_ST_pp0_stg16_fsm_18, ap_sig_cseq_ST_pp0_stg17_fsm_19, ap_sig_cseq_ST_pp0_stg18_fsm_20, ap_sig_cseq_ST_pp0_stg19_fsm_21, ap_sig_cseq_ST_pp0_stg20_fsm_22, ap_sig_cseq_ST_pp0_stg21_fsm_23, ap_sig_cseq_ST_pp0_stg22_fsm_24, ap_sig_cseq_ST_pp0_stg23_fsm_25, ap_sig_cseq_ST_pp0_stg24_fsm_26, ap_sig_cseq_ST_pp0_stg25_fsm_27, ap_sig_cseq_ST_pp0_stg26_fsm_28, ap_sig_cseq_ST_pp0_stg27_fsm_29, ap_sig_cseq_ST_pp0_stg28_fsm_30, ap_sig_cseq_ST_pp0_stg29_fsm_31, ap_sig_cseq_ST_pp0_stg30_fsm_32, ap_sig_cseq_ST_pp0_stg31_fsm_33, ap_sig_cseq_ST_pp0_stg32_fsm_34, ap_sig_cseq_ST_pp0_stg33_fsm_35)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((compute_2_reg_1727 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY)))) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_5) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_7) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_279))) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg7_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg8_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg35_fsm_37) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg34_fsm_36) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg6_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg9_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg10_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg11_fsm_13) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg12_fsm_14) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg13_fsm_15) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg14_fsm_16) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg15_fsm_17) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg16_fsm_18) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg17_fsm_19) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg18_fsm_20) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg19_fsm_21) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg20_fsm_22) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg21_fsm_23) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg22_fsm_24) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg23_fsm_25) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg24_fsm_26) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg25_fsm_27) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg26_fsm_28) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg27_fsm_29) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg28_fsm_30) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg29_fsm_31) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg30_fsm_32) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg31_fsm_33) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg32_fsm_34) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg33_fsm_35))) then 
            grp_fu_811_ce <= ap_const_logic_1;
        else 
            grp_fu_811_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_811_p0 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(col_c2_1_fu_202));
    grp_fu_811_p1 <= ap_const_lv32_1A(6 - 1 downto 0);
    grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_ap_start <= ap_reg_grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_ap_start;

    img_input_data_stream_0_V_read_assign_proc : process(ap_reg_ppiten_pp0_it0, exitcond_flatten_reg_1499, ap_sig_cseq_ST_pp0_stg5_fsm_7, ap_sig_279)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_flatten_reg_1499) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_7) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_279)))) then 
            img_input_data_stream_0_V_read <= ap_const_logic_1;
        else 
            img_input_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img_input_data_stream_0_V_write_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_img_data_stream_0_V_write)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            img_input_data_stream_0_V_write <= grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_img_data_stream_0_V_write;
        else 
            img_input_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    img_input_data_stream_1_V_read_assign_proc : process(ap_reg_ppiten_pp0_it0, exitcond_flatten_reg_1499, ap_sig_cseq_ST_pp0_stg5_fsm_7, ap_sig_279)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_flatten_reg_1499) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_7) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_279)))) then 
            img_input_data_stream_1_V_read <= ap_const_logic_1;
        else 
            img_input_data_stream_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img_input_data_stream_1_V_write_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_img_data_stream_1_V_write)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            img_input_data_stream_1_V_write <= grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_img_data_stream_1_V_write;
        else 
            img_input_data_stream_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    img_input_data_stream_2_V_read_assign_proc : process(ap_reg_ppiten_pp0_it0, exitcond_flatten_reg_1499, ap_sig_cseq_ST_pp0_stg5_fsm_7, ap_sig_279)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_flatten_reg_1499) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_7) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_279)))) then 
            img_input_data_stream_2_V_read <= ap_const_logic_1;
        else 
            img_input_data_stream_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img_input_data_stream_2_V_write_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_img_data_stream_2_V_write)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            img_input_data_stream_2_V_write <= grp_net_AXIvideo2Mat_32_28_28_4096_s_fu_434_img_data_stream_2_V_write;
        else 
            img_input_data_stream_2_V_write <= ap_const_logic_0;
        end if; 
    end process;

    indvar_flatten_next_fu_502_p2 <= std_logic_vector(unsigned(indvar_flatten_phi_fu_405_p4) + unsigned(ap_const_lv10_1));

    indvar_flatten_phi_fu_405_p4_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, indvar_flatten_reg_401, exitcond_flatten_reg_1499, indvar_flatten_next_reg_1503)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond_flatten_reg_1499))) then 
            indvar_flatten_phi_fu_405_p4 <= indvar_flatten_next_reg_1503;
        else 
            indvar_flatten_phi_fu_405_p4 <= indvar_flatten_reg_401;
        end if; 
    end process;


    line_buffer_1_address0_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg2_fsm_4, ap_sig_cseq_ST_pp0_stg4_fsm_6, ap_sig_cseq_ST_pp0_stg1_fsm_3, line_buffer_1_addr_2_reg_1568, line_buffer_1_addr_3_reg_1579, ap_sig_cseq_ST_pp0_stg3_fsm_5, line_buffer_1_addr_8_reg_1595, ap_sig_cseq_ST_pp0_stg5_fsm_7, ap_sig_cseq_ST_pp0_stg7_fsm_9, ap_sig_cseq_ST_pp0_stg8_fsm_10, tmp_8_cast_fu_1063_p1, tmp_10_cast_fu_1089_p1, tmp_13_cast_fu_1109_p1, tmp_7_cast_fu_1124_p1, tmp_14_cast_fu_1146_p1, ap_sig_cseq_ST_pp0_stg6_fsm_8)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg8_fsm_10)) then 
                line_buffer_1_address0 <= line_buffer_1_addr_8_reg_1595;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg7_fsm_9)) then 
                line_buffer_1_address0 <= tmp_14_cast_fu_1146_p1(8 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg6_fsm_8)) then 
                line_buffer_1_address0 <= line_buffer_1_addr_3_reg_1579;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_7)) then 
                line_buffer_1_address0 <= line_buffer_1_addr_2_reg_1568;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_6)) then 
                line_buffer_1_address0 <= tmp_7_cast_fu_1124_p1(8 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_5)) then 
                line_buffer_1_address0 <= tmp_13_cast_fu_1109_p1(8 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4)) then 
                line_buffer_1_address0 <= tmp_10_cast_fu_1089_p1(8 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3)) then 
                line_buffer_1_address0 <= tmp_8_cast_fu_1063_p1(8 - 1 downto 0);
            else 
                line_buffer_1_address0 <= "XXXXXXXX";
            end if;
        else 
            line_buffer_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    line_buffer_1_address1_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg2_fsm_4, ap_sig_cseq_ST_pp0_stg4_fsm_6, ap_sig_cseq_ST_pp0_stg1_fsm_3, line_buffer_1_addr_reg_1562, line_buffer_1_addr_5_reg_1584, line_buffer_1_addr_6_reg_1589, ap_sig_cseq_ST_pp0_stg3_fsm_5, ap_sig_cseq_ST_pp0_stg5_fsm_7, ap_sig_cseq_ST_pp0_stg7_fsm_9, tmp_9_cast_fu_1074_p1, tmp_12_cast_fu_1099_p1, tmp_15_cast_fu_1119_p1, tmp_11_cast_fu_1133_p1, ap_sig_cseq_ST_pp0_stg6_fsm_8)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg7_fsm_9)) then 
                line_buffer_1_address1 <= line_buffer_1_addr_6_reg_1589;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg6_fsm_8)) then 
                line_buffer_1_address1 <= line_buffer_1_addr_5_reg_1584;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_7)) then 
                line_buffer_1_address1 <= tmp_11_cast_fu_1133_p1(8 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_6)) then 
                line_buffer_1_address1 <= line_buffer_1_addr_reg_1562;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_5)) then 
                line_buffer_1_address1 <= tmp_15_cast_fu_1119_p1(8 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4)) then 
                line_buffer_1_address1 <= tmp_12_cast_fu_1099_p1(8 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3)) then 
                line_buffer_1_address1 <= tmp_9_cast_fu_1074_p1(8 - 1 downto 0);
            else 
                line_buffer_1_address1 <= "XXXXXXXX";
            end if;
        else 
            line_buffer_1_address1 <= "XXXXXXXX";
        end if; 
    end process;


    line_buffer_1_ce0_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg2_fsm_4, ap_sig_cseq_ST_pp0_stg4_fsm_6, ap_sig_cseq_ST_pp0_stg1_fsm_3, ap_sig_cseq_ST_pp0_stg3_fsm_5, ap_sig_cseq_ST_pp0_stg5_fsm_7, ap_sig_279, ap_sig_cseq_ST_pp0_stg7_fsm_9, ap_sig_cseq_ST_pp0_stg8_fsm_10, ap_sig_cseq_ST_pp0_stg6_fsm_8)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_6)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_5)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg7_fsm_9)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_7) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_279))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg8_fsm_10)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg6_fsm_8)))) then 
            line_buffer_1_ce0 <= ap_const_logic_1;
        else 
            line_buffer_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_1_ce1_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg2_fsm_4, ap_sig_cseq_ST_pp0_stg4_fsm_6, ap_sig_cseq_ST_pp0_stg1_fsm_3, ap_sig_cseq_ST_pp0_stg3_fsm_5, ap_sig_cseq_ST_pp0_stg5_fsm_7, ap_sig_279, ap_sig_cseq_ST_pp0_stg7_fsm_9, ap_sig_cseq_ST_pp0_stg6_fsm_8)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_6)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_5)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg7_fsm_9)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_7) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_279))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg6_fsm_8)))) then 
            line_buffer_1_ce1 <= ap_const_logic_1;
        else 
            line_buffer_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_1_d0_assign_proc : process(ap_reg_ppiten_pp0_it0, reg_463, ap_sig_cseq_ST_pp0_stg4_fsm_6, line_buffer_1_load_3_reg_1606, ap_sig_cseq_ST_pp0_stg5_fsm_7, img_input_data_stream_0_V_dout, tmp_103_reg_1626, ap_sig_cseq_ST_pp0_stg7_fsm_9, ap_sig_cseq_ST_pp0_stg8_fsm_10, ap_sig_cseq_ST_pp0_stg6_fsm_8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg8_fsm_10))) then 
            line_buffer_1_d0 <= tmp_103_reg_1626;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg6_fsm_8))) then 
            line_buffer_1_d0 <= line_buffer_1_load_3_reg_1606;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_7))) then 
            line_buffer_1_d0 <= img_input_data_stream_0_V_dout;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_6)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg7_fsm_9)))) then 
            line_buffer_1_d0 <= reg_463;
        else 
            line_buffer_1_d0 <= "XXXXXXXX";
        end if; 
    end process;


    line_buffer_1_d1_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg4_fsm_6, reg_468, line_buffer_1_load_2_reg_1601, ap_sig_cseq_ST_pp0_stg5_fsm_7, tmp_102_reg_1618, ap_sig_cseq_ST_pp0_stg7_fsm_9, ap_sig_cseq_ST_pp0_stg6_fsm_8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg6_fsm_8))) then 
            line_buffer_1_d1 <= tmp_102_reg_1618;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_7))) then 
            line_buffer_1_d1 <= line_buffer_1_load_2_reg_1601;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_6)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg7_fsm_9)))) then 
            line_buffer_1_d1 <= reg_468;
        else 
            line_buffer_1_d1 <= "XXXXXXXX";
        end if; 
    end process;


    line_buffer_1_we0_assign_proc : process(ap_reg_ppiten_pp0_it0, exitcond_flatten_reg_1499, ap_sig_cseq_ST_pp0_stg4_fsm_6, ap_sig_cseq_ST_pp0_stg5_fsm_7, ap_sig_279, ap_sig_cseq_ST_pp0_stg7_fsm_9, ap_sig_cseq_ST_pp0_stg8_fsm_10, ap_sig_cseq_ST_pp0_stg6_fsm_8)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_flatten_reg_1499) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_6)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_flatten_reg_1499) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg7_fsm_9)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_flatten_reg_1499) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_7) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_279))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_flatten_reg_1499) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg8_fsm_10)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_flatten_reg_1499) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg6_fsm_8)))) then 
            line_buffer_1_we0 <= ap_const_logic_1;
        else 
            line_buffer_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_1_we1_assign_proc : process(ap_reg_ppiten_pp0_it0, exitcond_flatten_reg_1499, ap_sig_cseq_ST_pp0_stg4_fsm_6, ap_sig_cseq_ST_pp0_stg5_fsm_7, ap_sig_279, ap_sig_cseq_ST_pp0_stg7_fsm_9, ap_sig_cseq_ST_pp0_stg6_fsm_8)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_flatten_reg_1499) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_6)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_flatten_reg_1499) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg7_fsm_9)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_flatten_reg_1499) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_7) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_279))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_flatten_reg_1499) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg6_fsm_8)))) then 
            line_buffer_1_we1 <= ap_const_logic_1;
        else 
            line_buffer_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_address0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg2_fsm_4, ap_sig_cseq_ST_pp0_stg1_fsm_3, ap_sig_cseq_ST_pp0_stg3_fsm_5, line_buffer_addr_2_reg_1706, line_buffer_addr_3_reg_1711, tmp_18_cast_fu_1295_p1, tmp_15_fu_1317_p1, tmp_19_cast_fu_1327_p1, ap_sig_cseq_ST_pp0_stg6_fsm_8)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg6_fsm_8)) then 
                line_buffer_address0 <= line_buffer_addr_3_reg_1711;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_5)) then 
                line_buffer_address0 <= line_buffer_addr_2_reg_1706;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3)) then 
                line_buffer_address0 <= tmp_15_fu_1317_p1(8 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4)) then 
                line_buffer_address0 <= tmp_19_cast_fu_1327_p1(8 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2)) then 
                line_buffer_address0 <= tmp_18_cast_fu_1295_p1(8 - 1 downto 0);
            else 
                line_buffer_address0 <= "XXXXXXXX";
            end if;
        else 
            line_buffer_address0 <= "XXXXXXXX";
        end if; 
    end process;


    line_buffer_address1_assign_proc : process(ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg2_fsm_4, ap_sig_cseq_ST_pp0_stg4_fsm_6, ap_sig_cseq_ST_pp0_stg3_fsm_5, ap_sig_cseq_ST_pp0_stg5_fsm_7, line_buffer_addr_reg_1685, line_buffer_addr_5_reg_1717, tmp_20_cast_fu_1337_p1, tmp_20_fu_1357_p3, ap_sig_cseq_ST_pp0_stg6_fsm_8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_6))) then 
            line_buffer_address1 <= tmp_20_fu_1357_p3(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_5))) then 
            line_buffer_address1 <= line_buffer_addr_reg_1685;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg6_fsm_8)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_7)))) then 
            line_buffer_address1 <= line_buffer_addr_5_reg_1717;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4))) then 
            line_buffer_address1 <= tmp_20_cast_fu_1337_p1(8 - 1 downto 0);
        else 
            line_buffer_address1 <= "XXXXXXXX";
        end if; 
    end process;


    line_buffer_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp0_it1, compute_2_reg_1727, ap_sig_cseq_ST_pp0_stg2_fsm_4, ap_sig_ioackin_OUTPUT_STREAM_TREADY, ap_sig_cseq_ST_pp0_stg1_fsm_3, ap_sig_cseq_ST_pp0_stg3_fsm_5, ap_sig_cseq_ST_pp0_stg6_fsm_8)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_5)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((compute_2_reg_1727 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg6_fsm_8)))) then 
            line_buffer_ce0 <= ap_const_logic_1;
        else 
            line_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_ce1_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg2_fsm_4, ap_sig_cseq_ST_pp0_stg4_fsm_6, ap_sig_cseq_ST_pp0_stg3_fsm_5, ap_sig_cseq_ST_pp0_stg5_fsm_7, ap_sig_279, ap_sig_cseq_ST_pp0_stg6_fsm_8)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_5)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_6)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg6_fsm_8)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_7) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_279))))) then 
            line_buffer_ce1 <= ap_const_logic_1;
        else 
            line_buffer_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_d0_assign_proc : process(line_buffer_q0, line_buffer_q1, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg1_fsm_3, ap_sig_cseq_ST_pp0_stg3_fsm_5, output_conv_1_0_reg_1649, ap_sig_cseq_ST_pp0_stg6_fsm_8)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg6_fsm_8)) then 
                line_buffer_d0 <= line_buffer_q1;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_5)) then 
                line_buffer_d0 <= output_conv_1_0_reg_1649;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3)) then 
                line_buffer_d0 <= line_buffer_q0;
            else 
                line_buffer_d0 <= "XXXXXXXX";
            end if;
        else 
            line_buffer_d0 <= "XXXXXXXX";
        end if; 
    end process;


    line_buffer_d1_assign_proc : process(line_buffer_q0, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg4_fsm_6, ap_sig_cseq_ST_pp0_stg3_fsm_5, output_conv_1_1_reg_1656, line_buffer_load_2_reg_1722, ap_sig_cseq_ST_pp0_stg6_fsm_8)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg6_fsm_8)) then 
                line_buffer_d1 <= output_conv_1_1_reg_1656;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_6)) then 
                line_buffer_d1 <= line_buffer_load_2_reg_1722;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_5)) then 
                line_buffer_d1 <= line_buffer_q0;
            else 
                line_buffer_d1 <= "XXXXXXXX";
            end if;
        else 
            line_buffer_d1 <= "XXXXXXXX";
        end if; 
    end process;


    line_buffer_we0_assign_proc : process(ap_reg_ppiten_pp0_it1, ap_reg_ppstg_tmp_79_reg_1539_pp0_iter1, ap_reg_ppstg_tmp_98_reg_1543_pp0_iter1, ap_sig_cseq_ST_pp0_stg1_fsm_3, ap_sig_cseq_ST_pp0_stg3_fsm_5, ap_sig_cseq_ST_pp0_stg6_fsm_8)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_5) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_79_reg_1539_pp0_iter1) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_98_reg_1543_pp0_iter1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_79_reg_1539_pp0_iter1) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_98_reg_1543_pp0_iter1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_79_reg_1539_pp0_iter1) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_98_reg_1543_pp0_iter1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg6_fsm_8)))) then 
            line_buffer_we0 <= ap_const_logic_1;
        else 
            line_buffer_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_we1_assign_proc : process(ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg4_fsm_6, ap_reg_ppstg_tmp_79_reg_1539_pp0_iter1, ap_reg_ppstg_tmp_98_reg_1543_pp0_iter1, ap_sig_cseq_ST_pp0_stg3_fsm_5, ap_sig_cseq_ST_pp0_stg6_fsm_8)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_5) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_79_reg_1539_pp0_iter1) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_98_reg_1543_pp0_iter1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_6) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_79_reg_1539_pp0_iter1) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_98_reg_1543_pp0_iter1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_79_reg_1539_pp0_iter1) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_98_reg_1543_pp0_iter1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg6_fsm_8)))) then 
            line_buffer_we1 <= ap_const_logic_1;
        else 
            line_buffer_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_conv_1_0_fu_1221_p3 <= 
        tmp_29_2_i_fu_1200_p2 when (compute_1_reg_1520(0) = '1') else 
        output_conv_1_0_1_fu_186;
    output_conv_1_1_fu_1228_p3 <= 
        tmp_29_2_1_i_fu_1215_p2 when (compute_1_reg_1520(0) = '1') else 
        output_conv_1_1_1_load_reg_1634;
    p_shl_cast_fu_1043_p1 <= std_logic_vector(resize(unsigned(tmp_4_fu_1036_p3),8));
    row_assign_mid2_fu_554_p3 <= 
        row_fu_508_p2 when (exitcond4_fu_514_p2(0) = '1') else 
        row_assign_phi_fu_416_p4;

    row_assign_phi_fu_416_p4_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, row_assign_reg_412, exitcond_flatten_reg_1499, row_assign_mid2_reg_1515)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond_flatten_reg_1499))) then 
            row_assign_phi_fu_416_p4 <= row_assign_mid2_reg_1515;
        else 
            row_assign_phi_fu_416_p4 <= row_assign_reg_412;
        end if; 
    end process;

    row_fu_508_p2 <= std_logic_vector(unsigned(row_assign_phi_fu_416_p4) + unsigned(ap_const_lv5_1));
    tmp10_fu_1407_p2 <= std_logic_vector(unsigned(tmp9_fu_1402_p2) + unsigned(ap_reg_ppstg_output_conv_1_0_reg_1649_pp0_iter1));
    tmp12_fu_1417_p2 <= std_logic_vector(unsigned(ap_const_lv8_28) + unsigned(tmp_100_fu_1412_p2));
    tmp2_fu_574_p2 <= (tmp_6_i_fu_562_p2 and tmp_8_i_fu_568_p2);
    tmp3_fu_490_p2 <= (tmp_5_i_fu_484_p2 and tmp_i_fu_478_p2);
    tmp3_mid1_fu_540_p2 <= (tmp_5_i_mid1_fu_534_p2 and tmp_i_mid1_fu_528_p2);
    tmp3_mid2_fu_546_p3 <= 
        tmp3_mid1_fu_540_p2 when (exitcond4_fu_514_p2(0) = '1') else 
        tmp3_fu_490_p2;
    tmp4_fu_1181_p2 <= std_logic_vector(unsigned(tmp_101_reg_1611) + unsigned(tmp5_fu_1177_p2));
    tmp5_fu_1177_p2 <= std_logic_vector(unsigned(tmp_103_reg_1626) + unsigned(tmp_102_reg_1618));
    tmp6_fu_1194_p2 <= std_logic_vector(unsigned(output_conv_1_0_1_fu_186) + unsigned(ap_const_lv8_1E));
    tmp7_fu_1386_p2 <= (tmp_6_i1_reg_1691 and tmp_8_i1_reg_1696);
    tmp8_fu_1390_p2 <= (tmp_5_i1_fu_1380_p2 and tmp_i2_fu_1374_p2);
    tmp9_fu_1402_p2 <= std_logic_vector(unsigned(v_fu_198) + unsigned(ap_reg_ppstg_output_conv_1_0_reg_1649_pp0_iter1));
    tmp_100_fu_1412_p2 <= std_logic_vector(shift_left(unsigned(ap_reg_ppstg_output_conv_1_1_reg_1656_pp0_iter1),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    tmp_10_cast_fu_1089_p1 <= std_logic_vector(resize(unsigned(tmp_s_fu_1084_p2),64));
    tmp_10_fu_1094_p2 <= std_logic_vector(signed(tmp_7_cast5_reg_1554) + signed(ap_const_lv9_A9));
        tmp_11_cast_fu_1133_p1 <= std_logic_vector(resize(signed(tmp_1_fu_1128_p2),64));

    tmp_11_fu_1104_p2 <= std_logic_vector(unsigned(tmp_7_reg_1547) + unsigned(ap_const_lv8_56));
        tmp_12_cast_fu_1099_p1 <= std_logic_vector(resize(signed(tmp_10_fu_1094_p2),64));

    tmp_12_fu_1141_p2 <= std_logic_vector(signed(tmp_7_cast5_reg_1554) + signed(ap_const_lv9_2));
    tmp_13_cast_fu_1109_p1 <= std_logic_vector(resize(unsigned(tmp_11_fu_1104_p2),64));
    tmp_13_fu_1114_p2 <= std_logic_vector(signed(tmp_7_cast5_reg_1554) + signed(ap_const_lv9_AA));
        tmp_14_cast_fu_1146_p1 <= std_logic_vector(resize(signed(tmp_12_fu_1141_p2),64));

    tmp_14_fu_1310_p3 <= (col_c2_1_load_1_reg_1671 & ap_const_lv1_0);
        tmp_15_cast_fu_1119_p1 <= std_logic_vector(resize(signed(tmp_13_fu_1114_p2),64));

    tmp_15_fu_1317_p1 <= std_logic_vector(resize(unsigned(tmp_14_fu_1310_p3),64));
    tmp_16_fu_1289_p2 <= std_logic_vector(unsigned(ap_const_lv9_34) + unsigned(tmp_17_cast_fu_1281_p3));
    tmp_17_cast_fu_1281_p3 <= (tmp_99_fu_1277_p1 & ap_const_lv1_0);
    tmp_17_fu_1322_p2 <= std_logic_vector(unsigned(ap_const_lv9_68) + unsigned(tmp_17_cast_reg_1678));
        tmp_18_cast_fu_1295_p1 <= std_logic_vector(resize(signed(tmp_16_fu_1289_p2),64));

    tmp_18_fu_1332_p2 <= std_logic_vector(unsigned(ap_const_lv9_35) + unsigned(tmp_17_cast_reg_1678));
        tmp_19_cast_fu_1327_p1 <= std_logic_vector(resize(signed(tmp_17_fu_1322_p2),64));

    tmp_19_fu_1352_p2 <= (tmp_14_reg_1701 or ap_const_lv33_1);
    tmp_1_fu_1128_p2 <= std_logic_vector(signed(tmp_7_cast5_reg_1554) + signed(ap_const_lv9_1));
        tmp_20_cast_fu_1337_p1 <= std_logic_vector(resize(signed(tmp_18_fu_1332_p2),64));

    tmp_20_fu_1357_p3 <= (ap_const_lv31_0 & tmp_19_fu_1352_p2);
    tmp_21_fu_1342_p2 <= std_logic_vector(unsigned(ap_const_lv9_69) + unsigned(tmp_17_cast_reg_1678));
        tmp_23_cast_fu_1347_p1 <= std_logic_vector(resize(signed(tmp_21_fu_1342_p2),64));

    tmp_26_fu_586_p2 <= "1" when (col_assign_mid2_fu_520_p3 = ap_const_lv5_1F) else "0";
    tmp_27_fu_592_p2 <= "1" when (col_assign_mid2_fu_520_p3 = ap_const_lv5_1E) else "0";
    tmp_28_fu_598_p2 <= (tmp_27_fu_592_p2 or tmp_26_fu_586_p2);
    tmp_29_0_1_i_fu_1161_p2 <= std_logic_vector(unsigned(tmp_33_0_1_2_2_i_fu_1156_p2) + unsigned(ap_const_lv8_FB));
    tmp_29_1_1_i_fu_1189_p2 <= std_logic_vector(unsigned(tmp_33_1_1_2_2_i_reg_1639) + unsigned(ap_const_lv8_FB));
    tmp_29_2_1_i_fu_1215_p2 <= std_logic_vector(unsigned(tmp_33_2_1_2_2_i_fu_1210_p2) + unsigned(ap_const_lv8_FB));
    tmp_29_2_i_fu_1200_p2 <= std_logic_vector(unsigned(tmp4_reg_1644) + unsigned(tmp6_fu_1194_p2));
    tmp_29_fu_604_p2 <= "1" when (col_assign_mid2_fu_520_p3 = ap_const_lv5_1D) else "0";
    tmp_30_fu_610_p2 <= (tmp_29_fu_604_p2 or tmp_28_fu_598_p2);
    tmp_31_fu_616_p2 <= "1" when (col_assign_mid2_fu_520_p3 = ap_const_lv5_1B) else "0";
    tmp_32_fu_622_p2 <= (tmp_31_fu_616_p2 or tmp_30_fu_610_p2);
    tmp_33_0_1_0_i_fu_1151_p2 <= std_logic_vector(unsigned(output_conv_1_1_1_fu_190) - unsigned(tmp_101_reg_1611));
    tmp_33_0_1_2_2_i_fu_1156_p2 <= std_logic_vector(unsigned(tmp_33_0_1_0_i_fu_1151_p2) - unsigned(tmp_101_reg_1611));
    tmp_33_1_1_0_i_fu_1167_p2 <= std_logic_vector(unsigned(tmp_29_0_1_i_fu_1161_p2) - unsigned(tmp_102_reg_1618));
    tmp_33_1_1_2_2_i_fu_1172_p2 <= std_logic_vector(unsigned(tmp_33_1_1_0_i_fu_1167_p2) - unsigned(tmp_102_reg_1618));
    tmp_33_2_1_0_i_fu_1205_p2 <= std_logic_vector(unsigned(tmp_29_1_1_i_fu_1189_p2) - unsigned(tmp_103_reg_1626));
    tmp_33_2_1_2_2_i_fu_1210_p2 <= std_logic_vector(unsigned(tmp_33_2_1_0_i_fu_1205_p2) - unsigned(tmp_103_reg_1626));
    tmp_33_fu_628_p2 <= "1" when (col_assign_mid2_fu_520_p3 = ap_const_lv5_1A) else "0";
    tmp_34_fu_634_p2 <= (tmp_33_fu_628_p2 or tmp_32_fu_622_p2);
    tmp_35_fu_640_p2 <= "1" when (col_assign_mid2_fu_520_p3 = ap_const_lv5_19) else "0";
    tmp_36_fu_646_p2 <= (tmp_35_fu_640_p2 or tmp_34_fu_634_p2);
    tmp_37_fu_652_p2 <= "1" when (col_assign_mid2_fu_520_p3 = ap_const_lv5_2) else "0";
    tmp_38_fu_658_p2 <= (tmp_37_fu_652_p2 or tmp_36_fu_646_p2);
    tmp_39_fu_664_p2 <= "1" when (col_assign_mid2_fu_520_p3 = ap_const_lv5_1) else "0";
    tmp_40_fu_670_p2 <= (tmp_39_fu_664_p2 or tmp_38_fu_658_p2);
    tmp_41_fu_676_p2 <= "1" when (col_assign_mid2_fu_520_p3 = ap_const_lv5_0) else "0";
    tmp_42_fu_682_p2 <= (tmp_41_fu_676_p2 or tmp_40_fu_670_p2);
    tmp_43_1_i_fu_1423_p2 <= std_logic_vector(unsigned(tmp12_fu_1417_p2) + unsigned(tmp10_fu_1407_p2));
    tmp_43_fu_688_p2 <= "1" when (row_assign_mid2_fu_554_p3 = ap_const_lv5_1F) else "0";
    tmp_44_fu_694_p2 <= "1" when (row_assign_mid2_fu_554_p3 = ap_const_lv5_1E) else "0";
    tmp_45_fu_700_p2 <= (tmp_44_fu_694_p2 or tmp_43_fu_688_p2);
    tmp_46_fu_706_p2 <= "1" when (row_assign_mid2_fu_554_p3 = ap_const_lv5_1D) else "0";
    tmp_47_fu_712_p2 <= (tmp_46_fu_706_p2 or tmp_45_fu_700_p2);
    tmp_48_fu_718_p2 <= "1" when (row_assign_mid2_fu_554_p3 = ap_const_lv5_1C) else "0";
    tmp_49_fu_724_p2 <= (tmp_48_fu_718_p2 or tmp_47_fu_712_p2);
    tmp_4_fu_1036_p3 <= (col_assign_mid2_reg_1508 & ap_const_lv2_0);
    tmp_50_fu_730_p2 <= "1" when (row_assign_mid2_fu_554_p3 = ap_const_lv5_1B) else "0";
    tmp_51_fu_736_p2 <= (tmp_50_fu_730_p2 or tmp_49_fu_724_p2);
    tmp_52_fu_742_p2 <= "1" when (row_assign_mid2_fu_554_p3 = ap_const_lv5_1A) else "0";
    tmp_53_fu_748_p2 <= (tmp_52_fu_742_p2 or tmp_51_fu_736_p2);
    tmp_54_fu_754_p2 <= "1" when (row_assign_mid2_fu_554_p3 = ap_const_lv5_19) else "0";
    tmp_55_fu_760_p2 <= (tmp_54_fu_754_p2 or tmp_53_fu_748_p2);
    tmp_56_fu_766_p2 <= "1" when (row_assign_mid2_fu_554_p3 = ap_const_lv5_2) else "0";
    tmp_57_fu_772_p2 <= (tmp_56_fu_766_p2 or tmp_55_fu_760_p2);
    tmp_58_fu_778_p2 <= "1" when (row_assign_mid2_fu_554_p3 = ap_const_lv5_1) else "0";
    tmp_59_fu_784_p2 <= (tmp_58_fu_778_p2 or tmp_57_fu_772_p2);
    tmp_5_fu_1248_p2 <= "1" when (tmp_62_fu_1244_p1 = ap_const_lv6_0) else "0";
    tmp_5_i1_fu_1380_p2 <= "1" when (signed(row_c2_1_fu_194) < signed(ap_const_lv32_17)) else "0";
    tmp_5_i_fu_484_p2 <= "1" when (unsigned(row_assign_phi_fu_416_p4) < unsigned(ap_const_lv5_19)) else "0";
    tmp_5_i_mid1_fu_534_p2 <= "1" when (unsigned(row_fu_508_p2) < unsigned(ap_const_lv5_19)) else "0";
    tmp_60_fu_790_p2 <= "1" when (row_assign_mid2_fu_554_p3 = ap_const_lv5_0) else "0";
    tmp_61_fu_796_p2 <= (tmp_60_fu_790_p2 or tmp_59_fu_784_p2);
    tmp_62_fu_1244_p1 <= grp_fu_811_p2(6 - 1 downto 0);
    tmp_63_fu_817_p2 <= "1" when (col_assign_mid2_fu_520_p3 = ap_const_lv5_1F) else "0";
    tmp_64_fu_823_p2 <= "1" when (col_assign_mid2_fu_520_p3 = ap_const_lv5_1E) else "0";
    tmp_65_fu_829_p2 <= (tmp_64_fu_823_p2 or tmp_63_fu_817_p2);
    tmp_66_fu_835_p2 <= "1" when (col_assign_mid2_fu_520_p3 = ap_const_lv5_1D) else "0";
    tmp_67_fu_841_p2 <= (tmp_66_fu_835_p2 or tmp_65_fu_829_p2);
    tmp_68_fu_847_p2 <= "1" when (col_assign_mid2_fu_520_p3 = ap_const_lv5_1B) else "0";
    tmp_69_fu_853_p2 <= (tmp_68_fu_847_p2 or tmp_67_fu_841_p2);
    tmp_6_i1_fu_1300_p2 <= "1" when (signed(col_c2_1_load_1_reg_1671) > signed(ap_const_lv32_2)) else "0";
    tmp_6_i_fu_562_p2 <= "1" when (unsigned(col_assign_mid2_fu_520_p3) > unsigned(ap_const_lv5_2)) else "0";
    tmp_70_fu_859_p2 <= "1" when (col_assign_mid2_fu_520_p3 = ap_const_lv5_1A) else "0";
    tmp_71_fu_865_p2 <= (tmp_70_fu_859_p2 or tmp_69_fu_853_p2);
    tmp_72_fu_871_p2 <= "1" when (col_assign_mid2_fu_520_p3 = ap_const_lv5_19) else "0";
    tmp_73_fu_877_p2 <= (tmp_72_fu_871_p2 or tmp_71_fu_865_p2);
    tmp_74_fu_883_p2 <= "1" when (col_assign_mid2_fu_520_p3 = ap_const_lv5_2) else "0";
    tmp_75_fu_889_p2 <= (tmp_74_fu_883_p2 or tmp_73_fu_877_p2);
    tmp_76_fu_895_p2 <= "1" when (col_assign_mid2_fu_520_p3 = ap_const_lv5_1) else "0";
    tmp_77_fu_901_p2 <= (tmp_76_fu_895_p2 or tmp_75_fu_889_p2);
    tmp_78_fu_907_p2 <= "1" when (col_assign_mid2_fu_520_p3 = ap_const_lv5_0) else "0";
    tmp_79_fu_913_p2 <= (tmp_78_fu_907_p2 or tmp_77_fu_901_p2);
        tmp_7_cast5_fu_1053_p1 <= std_logic_vector(resize(signed(tmp_7_fu_1047_p2),9));

        tmp_7_cast_fu_1124_p1 <= std_logic_vector(resize(signed(tmp_7_reg_1547),64));

    tmp_7_fu_1047_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_1043_p1) - unsigned(tmp_i1_cast_fu_1033_p1));
    tmp_80_fu_919_p2 <= "1" when (row_assign_mid2_fu_554_p3 = ap_const_lv5_1F) else "0";
    tmp_81_fu_925_p2 <= "1" when (row_assign_mid2_fu_554_p3 = ap_const_lv5_1E) else "0";
    tmp_82_fu_931_p2 <= (tmp_81_fu_925_p2 or tmp_80_fu_919_p2);
    tmp_83_fu_937_p2 <= "1" when (row_assign_mid2_fu_554_p3 = ap_const_lv5_1D) else "0";
    tmp_84_fu_943_p2 <= (tmp_83_fu_937_p2 or tmp_82_fu_931_p2);
    tmp_85_fu_949_p2 <= "1" when (row_assign_mid2_fu_554_p3 = ap_const_lv5_1C) else "0";
    tmp_86_fu_955_p2 <= (tmp_85_fu_949_p2 or tmp_84_fu_943_p2);
    tmp_87_fu_961_p2 <= "1" when (row_assign_mid2_fu_554_p3 = ap_const_lv5_1B) else "0";
    tmp_88_fu_967_p2 <= (tmp_87_fu_961_p2 or tmp_86_fu_955_p2);
    tmp_89_fu_973_p2 <= "1" when (row_assign_mid2_fu_554_p3 = ap_const_lv5_1A) else "0";
    tmp_8_cast_fu_1063_p1 <= std_logic_vector(resize(unsigned(tmp_8_fu_1057_p2),64));
    tmp_8_fu_1057_p2 <= std_logic_vector(unsigned(tmp_7_fu_1047_p2) + unsigned(ap_const_lv8_54));
    tmp_8_i1_fu_1305_p2 <= "1" when (signed(col_c2_1_load_1_reg_1671) < signed(ap_const_lv32_17)) else "0";
    tmp_8_i_fu_568_p2 <= "1" when (unsigned(col_assign_mid2_fu_520_p3) < unsigned(ap_const_lv5_19)) else "0";
    tmp_90_fu_979_p2 <= (tmp_89_fu_973_p2 or tmp_88_fu_967_p2);
    tmp_91_fu_985_p2 <= "1" when (row_assign_mid2_fu_554_p3 = ap_const_lv5_19) else "0";
    tmp_92_fu_991_p2 <= (tmp_91_fu_985_p2 or tmp_90_fu_979_p2);
    tmp_93_fu_997_p2 <= "1" when (row_assign_mid2_fu_554_p3 = ap_const_lv5_2) else "0";
    tmp_94_fu_1003_p2 <= (tmp_93_fu_997_p2 or tmp_92_fu_991_p2);
    tmp_95_fu_1009_p2 <= "1" when (row_assign_mid2_fu_554_p3 = ap_const_lv5_1) else "0";
    tmp_96_fu_1015_p2 <= (tmp_95_fu_1009_p2 or tmp_94_fu_1003_p2);
    tmp_97_fu_1021_p2 <= "1" when (row_assign_mid2_fu_554_p3 = ap_const_lv5_0) else "0";
    tmp_98_fu_1027_p2 <= (tmp_97_fu_1021_p2 or tmp_96_fu_1015_p2);
    tmp_99_fu_1277_p1 <= col_c2_1_fu_202(8 - 1 downto 0);
        tmp_9_cast_fu_1074_p1 <= std_logic_vector(resize(signed(tmp_9_fu_1068_p2),64));

    tmp_9_fu_1068_p2 <= std_logic_vector(signed(tmp_7_cast5_fu_1053_p1) + signed(ap_const_lv9_A8));
    tmp_i1_cast_fu_1033_p1 <= std_logic_vector(resize(unsigned(col_assign_mid2_reg_1508),8));
    tmp_i2_fu_1374_p2 <= "1" when (signed(row_c2_1_fu_194) > signed(ap_const_lv32_2)) else "0";
    tmp_i_fu_478_p2 <= "1" when (unsigned(row_assign_phi_fu_416_p4) > unsigned(ap_const_lv5_2)) else "0";
    tmp_i_mid1_fu_528_p2 <= "1" when (unsigned(row_fu_508_p2) > unsigned(ap_const_lv5_2)) else "0";
    tmp_s_fu_1084_p2 <= std_logic_vector(unsigned(tmp_7_reg_1547) + unsigned(ap_const_lv8_55));
end behav;
