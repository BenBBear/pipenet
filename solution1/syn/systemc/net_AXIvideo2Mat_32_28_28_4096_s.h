// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _net_AXIvideo2Mat_32_28_28_4096_s_HH_
#define _net_AXIvideo2Mat_32_28_28_4096_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct net_AXIvideo2Mat_32_28_28_4096_s : public sc_module {
    // Port declarations 24
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > AXI_video_strm_TDATA;
    sc_in< sc_logic > AXI_video_strm_TVALID;
    sc_out< sc_logic > AXI_video_strm_TREADY;
    sc_in< sc_lv<4> > AXI_video_strm_TKEEP;
    sc_in< sc_lv<4> > AXI_video_strm_TSTRB;
    sc_in< sc_lv<1> > AXI_video_strm_TUSER;
    sc_in< sc_lv<1> > AXI_video_strm_TLAST;
    sc_in< sc_lv<1> > AXI_video_strm_TID;
    sc_in< sc_lv<1> > AXI_video_strm_TDEST;
    sc_out< sc_lv<8> > img_data_stream_0_V_din;
    sc_in< sc_logic > img_data_stream_0_V_full_n;
    sc_out< sc_logic > img_data_stream_0_V_write;
    sc_out< sc_lv<8> > img_data_stream_1_V_din;
    sc_in< sc_logic > img_data_stream_1_V_full_n;
    sc_out< sc_logic > img_data_stream_1_V_write;
    sc_out< sc_lv<8> > img_data_stream_2_V_din;
    sc_in< sc_logic > img_data_stream_2_V_full_n;
    sc_out< sc_logic > img_data_stream_2_V_write;


    // Module declarations
    net_AXIvideo2Mat_32_28_28_4096_s(sc_module_name name);
    SC_HAS_PROCESS(net_AXIvideo2Mat_32_28_28_4096_s);

    ~net_AXIvideo2Mat_32_28_28_4096_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_24;
    sc_signal< sc_logic > AXI_video_strm_TDATA_blk_n;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_56;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp1_stg0_fsm_4;
    sc_signal< bool > ap_sig_63;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it1;
    sc_signal< sc_lv<1> > exitcond3_fu_293_p2;
    sc_signal< sc_lv<1> > brmerge_fu_308_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_5;
    sc_signal< bool > ap_sig_83;
    sc_signal< sc_logic > img_data_stream_0_V_blk_n;
    sc_signal< sc_lv<1> > exitcond3_reg_372;
    sc_signal< sc_logic > img_data_stream_1_V_blk_n;
    sc_signal< sc_logic > img_data_stream_2_V_blk_n;
    sc_signal< sc_lv<1> > eol_1_reg_158;
    sc_signal< sc_lv<32> > axi_data_V_1_reg_169;
    sc_signal< sc_lv<5> > p_1_reg_180;
    sc_signal< sc_lv<1> > eol_reg_191;
    sc_signal< sc_lv<1> > axi_last_V_2_reg_203;
    sc_signal< sc_lv<32> > p_Val2_s_reg_216;
    sc_signal< sc_lv<32> > tmp_data_V_reg_343;
    sc_signal< sc_lv<1> > tmp_last_V_reg_351;
    sc_signal< sc_lv<1> > exitcond2_fu_281_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_122;
    sc_signal< sc_lv<5> > i_V_fu_287_p2;
    sc_signal< sc_lv<5> > i_V_reg_367;
    sc_signal< bool > ap_sig_127;
    sc_signal< bool > ap_sig_137;
    sc_signal< sc_lv<5> > j_V_fu_299_p2;
    sc_signal< sc_lv<8> > tmp_104_fu_314_p1;
    sc_signal< sc_lv<8> > tmp_104_reg_385;
    sc_signal< sc_lv<8> > tmp_4_reg_390;
    sc_signal< sc_lv<8> > tmp_5_reg_395;
    sc_signal< bool > ap_sig_155;
    sc_signal< sc_lv<1> > axi_last_V_3_reg_228;
    sc_signal< sc_lv<1> > axi_last_V1_reg_127;
    sc_signal< sc_logic > ap_sig_cseq_ST_st8_fsm_6;
    sc_signal< bool > ap_sig_173;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_180;
    sc_signal< sc_lv<32> > axi_data_V_3_reg_240;
    sc_signal< sc_lv<32> > axi_data_V1_reg_137;
    sc_signal< sc_lv<5> > p_s_reg_147;
    sc_signal< sc_lv<1> > eol_1_phi_fu_161_p4;
    sc_signal< sc_lv<32> > axi_data_V_1_phi_fu_172_p4;
    sc_signal< sc_lv<1> > eol_phi_fu_195_p4;
    sc_signal< sc_lv<1> > ap_reg_phiprechg_axi_last_V_2_reg_203pp1_it0;
    sc_signal< sc_lv<32> > ap_reg_phiprechg_p_Val2_s_reg_216pp1_it0;
    sc_signal< sc_lv<32> > p_Val2_s_phi_fu_220_p4;
    sc_signal< sc_lv<1> > eol_2_reg_252;
    sc_signal< sc_lv<1> > sof_1_fu_84;
    sc_signal< sc_lv<1> > tmp_user_V_fu_272_p1;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< bool > ap_sig_76;
    sc_signal< bool > ap_sig_200;
    sc_signal< bool > ap_sig_145;
    sc_signal< bool > ap_sig_215;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_st1_fsm_0;
    static const sc_lv<7> ap_ST_st2_fsm_1;
    static const sc_lv<7> ap_ST_st3_fsm_2;
    static const sc_lv<7> ap_ST_st4_fsm_3;
    static const sc_lv<7> ap_ST_pp1_stg0_fsm_4;
    static const sc_lv<7> ap_ST_st7_fsm_5;
    static const sc_lv<7> ap_ST_st8_fsm_6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<5> ap_const_lv5_1C;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const bool ap_true;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_AXI_video_strm_TDATA_blk_n();
    void thread_AXI_video_strm_TREADY();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_reg_phiprechg_axi_last_V_2_reg_203pp1_it0();
    void thread_ap_reg_phiprechg_p_Val2_s_reg_216pp1_it0();
    void thread_ap_sig_122();
    void thread_ap_sig_127();
    void thread_ap_sig_137();
    void thread_ap_sig_145();
    void thread_ap_sig_155();
    void thread_ap_sig_173();
    void thread_ap_sig_180();
    void thread_ap_sig_200();
    void thread_ap_sig_215();
    void thread_ap_sig_24();
    void thread_ap_sig_56();
    void thread_ap_sig_63();
    void thread_ap_sig_76();
    void thread_ap_sig_83();
    void thread_ap_sig_cseq_ST_pp1_stg0_fsm_4();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st7_fsm_5();
    void thread_ap_sig_cseq_ST_st8_fsm_6();
    void thread_axi_data_V_1_phi_fu_172_p4();
    void thread_brmerge_fu_308_p2();
    void thread_eol_1_phi_fu_161_p4();
    void thread_eol_phi_fu_195_p4();
    void thread_exitcond2_fu_281_p2();
    void thread_exitcond3_fu_293_p2();
    void thread_i_V_fu_287_p2();
    void thread_img_data_stream_0_V_blk_n();
    void thread_img_data_stream_0_V_din();
    void thread_img_data_stream_0_V_write();
    void thread_img_data_stream_1_V_blk_n();
    void thread_img_data_stream_1_V_din();
    void thread_img_data_stream_1_V_write();
    void thread_img_data_stream_2_V_blk_n();
    void thread_img_data_stream_2_V_din();
    void thread_img_data_stream_2_V_write();
    void thread_j_V_fu_299_p2();
    void thread_p_Val2_s_phi_fu_220_p4();
    void thread_tmp_104_fu_314_p1();
    void thread_tmp_user_V_fu_272_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
